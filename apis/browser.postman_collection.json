{
	"info": {
		"_postman_id": "38a1847a-ea86-4910-a41e-9882282547b7",
		"name": "browser",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "交易",
			"item": [
				{
					"name": "invoke_smartcontract",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Version\": \"00\",\n    \"Contract\": \"AFmseVrdL9f9oyCzZefL9tG6UbviKTaSnK\",\n    \"Method\": \"FsGetFileInfo\",\n    \"Params\": [\n        \"zb2rhk1JBGAf9ivtroSNe2xsWLuV15BLjMZMknpVPq58Qepgr\"\n    ],\n     \"GasPrice\": 500,\n    \"GasLimit\": 20000,\n    \"Password\": \"pwd\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/smartcontract/invoke",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"smartcontract",
								"invoke"
							]
						},
						"description": "> 接口说明\n\n执行合约\n\nPOST http://{{host}}/api/v1/smartcontract/invoke\n\n> 请求参数\n\n```json\n{\n    \"Version\": \"00\",\n    \"Contract\": \"AFmseVrdL9f9oyCzZefL9tG6UbviKTaSnK\",\n    \"Method\": \"FsGetFileInfo\",\n    \"Params\": [\n        \"zb2rhk1JBGAf9ivtroSNe2xsWLuV15BLjMZMknpVPq58Qepgr\"\n    ],\n    \"Password\": \"pwd\"\n}\n```\n\n| 参数名     | 类型   | 必需 | 描述                  | 示例 |\n| ---------- | ------ | ---- | --------------------- | ---- |\n| `Version`  | number | 1    | 合约版本号的Hex字符串 |      |\n| `Contract` | string | 1    | 合约的Base58地址      |      |\n| `Method`   | string | 1    | 执行的合约的方法      |      |\n| `Params`   | array  | 1    | 参数                  |      |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"invokesmartcontract\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Tx\": \"b226e74b0f642c68916db48a577a20797f4db261b32e22850db46f99f0a22c5a\"\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名        | 类型   | 描述 |\n| ------------- | ------ | ---- |\n| `Action`      | string |      |\n| `Desc`        | string |      |\n| `Error`       | number |      |\n| `Result`      | string |      |\n| `Version`     | string |      |\n| `Result.Data` | string | 结果 |\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40002 | 参数验证失败|"
					},
					"response": []
				},
				{
					"name": "smartcode_event",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "/{{host}}/api/v1/smartcode/event/transactions/1888",
							"path": [
								"{{host}}",
								"api",
								"v1",
								"smartcode",
								"event",
								"transactions",
								"1888"
							]
						},
						"description": "> 接口说明\n\n通过区块高度获取事件\n\nGET  http://{{host}}/api/v1/smartcode/event/transactions/:height\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getsmartcodeeventbyheight\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"TxHash\": \"76eeb76603f50f763c2d38054c4935b4b0b143db0de86385c18ef13e649ab1c6\",\n        \"State\": 1,\n        \"GasConsumed\": 10000000,\n        \"Notify\": [\n            {\n                \"ContractAddress\": \"0100000000000000000000000000000000000000\",\n                \"States\": [\n                    \"transfer\",\n                    \"ANa3f9jm2FkWu4NrVn6L1FGu7zadKdvPjL\",\n                    \"AFmseVrdL9f9oyCzZefL9tG6UbviRj6Fv6\",\n                    1000000000\n                ]\n            },\n            {\n                \"ContractAddress\": \"0900000000000000000000000000000000000000\",\n                \"States\": {\n                    \"blockHeight\": 1888,\n                    \"channelID\": 101,\n                    \"eventName\": \"SetTotalDeposit\",\n                    \"participant\": [\n                        74,\n                        140,\n                        62,\n                        244,\n                        235,\n                        204,\n                        189,\n                        103,\n                        69,\n                        136,\n                        6,\n                        10,\n                        195,\n                        141,\n                        161,\n                        1,\n                        139,\n                        170,\n                        172,\n                        195\n                    ],\n                    \"totalDeposit\": 1000000000\n                }\n            },\n            {\n                \"ContractAddress\": \"0100000000000000000000000000000000000000\",\n                \"States\": [\n                    \"transfer\",\n                    \"ANa3f9jm2FkWu4NrVn6L1FGu7zadKdvPjL\",\n                    \"AFmseVrdL9f9oyCzZefL9tG6UbviEH9ugK\",\n                    10000000\n                ]\n            }\n        ]\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名                          | 类型   | 描述 |\n| ------------------------------- | ------ | ---- |\n| `Action`                        | string |      |\n| `Desc`                          | string |      |\n| `Error`                         | number |      |\n| `Result`                        | object |      |\n| `Result.TxHash`                 | string |   交易Hash   |\n| `Result.State`                  | number |   事件状态   |\n| `Result.GasConsumed`            | number |   预估Gas消耗值   |\n| `Result.Notify`                 | array  |   通知   |\n| `Result.Notify.ContractAddress` | number |   合约地址   |\n| `Result.Notify.States`          | array  |   通知的状态  |\n| `Version`                       | string |      |\n\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 50000 | 主链未知异常 |\n| 50007 | 未知资产 |"
					},
					"response": []
				},
				{
					"name": "preexec_smartcontract",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Version\": \"00\",\n    \"Contract\": \"AFmseVrdL9f9oyCzZefL9tG6UbvhzQYRMK\",\n    \"Method\": \"FsGetFileInfo\",\n    \"Params\": [\n        \"QmchMLDP58Bu6z9coNKj8KQytRQed9wJUkVgSRm1qNwWVt\"\n    ]\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/smartcontract/preexec",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"smartcontract",
								"preexec"
							]
						},
						"description": "> 接口说明\n\nPOST http://{{host}}/api/v1/smartcontract/preexec\n\n合约预执行\n\n> 请求参数\n\n```json\n{\n    \"Version\": \"00\",\n    \"Contract\": \"AFmseVrdL9f9oyCzZefL9tG6UbviKTaSnK\",\n    \"Method\": \"FsGetFileInfo\",\n    \"Params\": [\n        \"zb2rhk1JBGAf9ivtroSNe2xsWLuV15BLjMZMknpVPq58Qepgr\"\n    ]\n}\n```\n\n| 参数名     | 类型   | 必需 | 描述                  | 示例 |\n| ---------- | ------ | ---- | --------------------- | ---- |\n| `Version`  | number | 1    | 合约版本号的Hex字符串 |      |\n| `Contract` | string | 1    | 合约的Base58地址      |      |\n| `Method`   | string | 1    | 执行的合约的方法      |      |\n| `Params`   | array  | 1    | 参数                  |      |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"preexecsmartcontract\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Data\": \"01fde501317a623272686b314a4247416639697674726f534e65327873574c75563135424c6a4d5a4d6b6e7056507135385165706772145ce4ddd4747dd5b504dd4a0f49d7d5e63fc8c6461b323031392d30362d30355f31372e34372e35355f4c4f472e6c6f6701010101020001022c010178000478a08c00fd6601810157c3b0380aa4007b74046c18203768003a8a1a2e360398f9bf62fcb0dd5345530f05a670ce8f896754bcdbc7572063f07863dea5a8a58cd27659a02680d6d07e711626b81b980277f3e7afe0810945c9f7b863408c626f27caed665c5b6dc6217240f9f4c1d15da349852a0d61968336aacc20d24c9d09041082e513dacd32f0400c89c96f82d3d5b7628829cf15c3add3ad25f582a6cc3bb1f022d36d47e0e2145e647e7c88ab679251feaf3081663999cdf695cf90ee32400ce2a5d1feca3683810122fffec7aae55445332587e3762370485e64da2a355ab95963fc015b2183e24e3527443f98d131d4b107d5f6facf9318a71596a707da9e554b7d483dc8ea176f07dfc0f0d87bdd0ccb699dad6376b32e1f98ccbcb45de0c1a7befbc37867ab5202c0b421554d113e257a31e455a99db480e6ecaa81fc4efcd6cb2d55db85baf32004a648b085d4610ed6b66ffd619ea93a39e5d327d9e1c8b1bda7582581aa910001200380810101\"\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名        | 类型   | 描述 |\n| ------------- | ------ | ---- |\n| `Action`      | string |      |\n| `Desc`        | string |      |\n| `Error`       | number |      |\n| `Result`      | string |      |\n| `Version`     | string |      |\n| `Result.Data` | string | 结果 |\n\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40002 | 参数验证失败|\n| 40005 | 合约调用失败 |"
					},
					"response": []
				},
				{
					"name": "transfer",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"To\": \"AYMnqA65pJFKAbbpD8hi5gdNDBmeFBy5hS\",\n    \"Asset\": \"save\",\n    \"Amount\": \"1.0\",\n    \"Password\": \"pwd\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/asset/transfer/direct",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"asset",
								"transfer",
								"direct"
							]
						},
						"description": "> 接口说明\n\n资产普通转账\n\nPOST http://{{host}}/api/v1/asset/transfer/direct\n\n> 请求参数\n\n```json\n{\n    \"To\": \"AYMnqA65pJFKAbbpD8hi5gdNDBmeFBy5hS\",\n    \"Asset\": \"save\",\n    \"Amount\": \"1.0\",\n    \"Password\": \"pwd\"\n}\n```\n\n| 参数名     | 类型   | 必需 | 描述           | 示例 |\n| ---------- | ------ | ---- | -------------- | ---- |\n| `To`       | string | 1    | 接收方钱包地址 |      |\n| `Asset`    | string | 1    | 资产名称       | save |\n| `Amount`   | number | 1    | 转账金额       |      |\n| `Password` | string | 1    | 密码           |      |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"assettransferdirect\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": \"601f64093a8b77882d98bcbb65c2ed6d9943a771c11448a714e1d6889d3216dd\",\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名    | 类型   | 描述     |\n| --------- | ------ | -------- |\n| `Action`  | string |          |\n| `Desc`    | string |          |\n| `Error`   | number |          |\n| `Result`  | string | 交易txid |\n| `Version` | string |          |\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40002 | 参数验证失败|\n| 40010 | 钱包地址格式不正确 |\n| 50000 | 主链未知异常 |\n| 50008 | 未知资产 |\n| 50009 | 转账失败 |"
					},
					"response": []
				},
				{
					"name": "batch-transfer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"To\": \"AYMnqA65pJFKAbbpD8hi5gdNDBmeFBy5hS\",\n    \"Asset\": \"save\",\n    \"Amount\": \"1.0\",\n    \"Password\": \"a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8\",\n    \"Times\": 2\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/asset/batchtransfer/direct",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"asset",
								"batchtransfer",
								"direct"
							]
						},
						"description": "> 接口说明\n\n资产普通转账\n\nPOST http://{{host}}/api/v1/asset/transfer/direct\n\n> 请求参数\n\n```json\n{\n    \"To\": \"AYMnqA65pJFKAbbpD8hi5gdNDBmeFBy5hS\",\n    \"Asset\": \"save\",\n    \"Amount\": \"1.0\",\n    \"Password\": \"pwd\"\n}\n```\n\n| 参数名     | 类型   | 必需 | 描述           | 示例 |\n| ---------- | ------ | ---- | -------------- | ---- |\n| `To`       | string | 1    | 接收方钱包地址 |      |\n| `Asset`    | string | 1    | 资产名称       | save |\n| `Amount`   | number | 1    | 转账金额       |      |\n| `Password` | string | 1    | 密码           |      |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"assettransferdirect\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": \"601f64093a8b77882d98bcbb65c2ed6d9943a771c11448a714e1d6889d3216dd\",\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名    | 类型   | 描述     |\n| --------- | ------ | -------- |\n| `Action`  | string |          |\n| `Desc`    | string |          |\n| `Error`   | number |          |\n| `Result`  | string | 交易txid |\n| `Version` | string |          |\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40002 | 参数验证失败|\n| 40010 | 钱包地址格式不正确 |\n| 50000 | 主链未知异常 |\n| 50008 | 未知资产 |\n| 50009 | 转账失败 |"
					},
					"response": []
				},
				{
					"name": "get_tx_records",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/transactions/AHjjdbVLhfTyiNFEq2X8mFnnirZY1yK8Rq/0?asset=save&limit=4&height=&skipTxCountFromBlock=2&IgnoreOtherContract=false",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"transactions",
								"AHjjdbVLhfTyiNFEq2X8mFnnirZY1yK8Rq",
								"0"
							],
							"query": [
								{
									"key": "asset",
									"value": "save"
								},
								{
									"key": "limit",
									"value": "4"
								},
								{
									"key": "height",
									"value": ""
								},
								{
									"key": "skipTxCountFromBlock",
									"value": "2"
								},
								{
									"key": "IgnoreOtherContract",
									"value": "false",
									"description": "是否隐藏其他合约交易"
								}
							]
						},
						"description": "> 接口说明\n\n获取交易记录\n\nGET http://{{host}}/api/v1/transactions/:addr/:type\n\n\n> 请求参数\n\n\n| 参数名                 | 类型   | 必需 | 描述                                              | 示例  |\n| ---------------------- | ------ | ---- | ------------------------------------------------- | ----- |\n| `addr`\t\t\t\t | string | 1\t | 钱包地址\t\t\t\t\t\t\t\t\t\t\t |\t\t |\n| `type`\t\t\t\t | string | 1\t | 筛选类型；0: 所有交易，1: 转出的交易， 2: 转入的交易 |\t\t |\n| `asset`                | string | 1    | 资产名称(当前只有 save)                           | save  |\n| `limit`                | string | 1    | 查询的交易个数限制。 当limit为0的时候，表示不限制 | 5     |\n| `height`               | string | 0    | 指定区块高度, 如果为空，则是当前高度              | 43356 |\n| `skipTxCountFromBlock` | string | 0    |                                                   | 1     |\n| `ignoreOtherCont` | string | 0    |           是否隐藏其他合约交易                                       | true     |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"gettxsbyheightlimit\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": [\n        {\n            \"Txid\": \"265468ff3512afb5d925ba2fc559effa446b95c27639b6ae9af1adbb46ee2a29\",\n            \"Type\": 1,\n            \"From\": \"AY46Kes2ayy8c38hKBqictG9F9ar73mqhD\",\n            \"To\": \"AFmseVrdL9f9oyCzZefL9tG6UbvjPTx9sq\",\n            \"Amount\": 0,\n            \"AmountFormat\": \"0\",\n            \"FeeFormat\": \"0.01\",\n            \"Asset\": \"save\",\n            \"Timestamp\": 1567740450,\n            \"BlockHeight\": 129919,\n            \"ContractAddr\": \"AFmseVrdL9f9oyCzZefL9tG6UbvjPTx9sq\",\n            \"ContractType\": 1\n        },\n        {\n            \"Txid\": \"2a2be34c9ce8d8ddf9a54be2dab03b002a3769f8cfaa429c6d2fe8a7d144dcdf\",\n            \"Type\": 1,\n            \"From\": \"AY46Kes2ayy8c38hKBqictG9F9ar73mqhD\",\n            \"To\": \"AFmseVrdL9f9oyCzZefL9tG6UbvhzQYRMK\",\n            \"Amount\": 40605691200,\n            \"AmountFormat\": \"40.6056912\",\n            \"FeeFormat\": \"0.01\",\n            \"Asset\": \"save\",\n            \"Timestamp\": 1567738527,\n            \"BlockHeight\": 129548,\n            \"ContractAddr\": \"AFmseVrdL9f9oyCzZefL9tG6UbvhUMqNMV\",\n            \"ContractType\": 0\n        }\n    ],\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名                | 类型   | 描述                                  |\n| --------------------- | ------ | ------------------------------------- |\n| `Action`              | string |                                       |\n| `Desc`                | string |                                       |\n| `Error`               | number |                                       |\n| `Result`              | array  |                                       |\n| `Version`             | string |                                       |\n| `Result.Type`         | number | 交易类型， 1: 转出的交易 2:转入的交易 |\n| `Result.From`         | string | 发送者                                |\n| `Result.To`           | string | 接收者                                |\n| `Result.Amount`       | number | 资产数量                              |\n| `Result.AmountFormat` | number | 资产数量（除以精度后的格式）          |\n| `Result.Asset`        | string | 资产名称                              |\n| `Result.Timestamp`    | number | 转账时间（UNIX时间戳，单位为秒）      |\n| `Result.Txid`         | string | 交易id                                |\n| `Result.FeeFormat`    | number | 交易费                                |\n| `Result.BlockHeight`  | number | 区块高度                              |\n| `Result.ContractAddr` | string |                                       |\n| `Result.ContractType` | number | 合约类型 0 为普通转账， 1 为合约调用  |\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40001 | 未知异常 |\n| 40002 | 参数验证失败|\n| 50000 | 主链未知异常 |\n| 50001 | 调用获取区块高度失败 |"
					},
					"response": []
				},
				{
					"name": "get_smartcode_event_by_txhash",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/smartcode/event/txhash/d68f9a642e33da5fc2435b429fa82a26818fbb52e2ac94592fa1deee480acb69",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"smartcode",
								"event",
								"txhash",
								"d68f9a642e33da5fc2435b429fa82a26818fbb52e2ac94592fa1deee480acb69"
							]
						},
						"description": "> 接口说明\n\nGET http://{{host}}/api/v1/smartcode/event/txhash/:txid\n\n通过交易HASH获取合约事件\n\n> 请求参数\n\n| 参数名       | 类型   | 必需 | 描述          | 示例 |\n| ------------ | ------ | ---- | ------------- | ---- |\n| `txid` | string | 1    | 交易Hash |      |"
					},
					"response": []
				},
				{
					"name": "get_smartcode_event_by_contract",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/smartcode/event/contract/AFmseVrdL9f9oyCzZefL9tG6UbviRj6Fv6/0/100",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"smartcode",
								"event",
								"contract",
								"AFmseVrdL9f9oyCzZefL9tG6UbviRj6Fv6",
								"0",
								"100"
							]
						},
						"description": "> 接口说明\n\nGET http://{{host}}/api/v1/smartcode/event/txhash/:txid\n\n通过交易HASH获取合约事件\n\n> 请求参数\n\n| 参数名       | 类型   | 必需 | 描述          | 示例 |\n| ------------ | ------ | ---- | ------------- | ---- |\n| `txid` | string | 1    | 交易Hash |      |"
					},
					"response": []
				}
			]
		},
		{
			"name": "挖矿",
			"item": [
				{
					"name": "revenue",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/dsp/file/share/revenue",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"dsp",
								"file",
								"share",
								"revenue"
							]
						},
						"description": "> 接口说明\n\n获取总的挖矿收益\n\nGET http://{{host}}/api/v1/dsp/file/share/revenue\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getfilesharerevenue\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Revenue\": 1000000000,\n        \"RevenueFormat\": \"1\"\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40004 | 数据库丢失 |\n| 59001 | 收益计算失败 |"
					},
					"response": []
				},
				{
					"name": "miner_get_share_income",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/dsp/file/share/income/1555091319/1556091319/0/10",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"dsp",
								"file",
								"share",
								"income",
								"1555091319",
								"1556091319",
								"0",
								"10"
							]
						},
						"description": "> 接口说明\n\n查看收益明细\n\n\nGET http://{{host}}/api/v1/dsp/file/share/income/:begin/:end/:offset/:limit\n\n\n\n> 请求参数\n\n| 参数名     | 类型   | 必需 | 描述           | 示例 |\n| ---------- | ------ | ---- | -------------- | ---- |\n| `begin`  | string | 1    | 查询开始的时间戳，单位秒 |      |\n| `end`   | string | 1    | 查询结束的时间戳，单位秒     |      |\n| `offset` | string | 1    | 分页偏移量，第一个的偏移量为0       |      |\n| `limit` | string | 1    | 返回的数量限制       |      |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getfileshareincome\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n    \t\"TotalFile\": 0,\n        \"TotalIncome\": 1000000000,\n        \"TotalIncomeFormat\": \"1\",\n        \"Incomes\": [\n            {\n                \"Name\": \"test\",\n                \"Profit\": 1000000000,\n                \"ProfitFormat\": \"1\",\n                \"SharedAt\": 1555491126\n            }\n        ]\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名                        | 类型   | 描述                               |\n| ----------------------------- | ------ | ---------------------------------- |\n| `Action`                      | string |                                    |\n| `Desc`                        | string |                                    |\n| `Error`                       | number |                                    |\n| `Result`                      | object |                                    |\n| `Result.TotalIncome`          | number | 查询区间内 总收益                  |\n| `Result.TotalIncomeFormat`    | number | 查询区间内 总收益（除以精度后）    |\n| `Result.Incomes`              | array  | 收益列表                           |\n| `Result.Incomes.Name`         | string | 文件昵称                           |\n| `Result.Incomes.Profit`       | number | 文件收益                           |\n| `Result.Incomes.ProfitFormat` | number | 文件收益（除以精度后）             |\n| `Result.Incomes.SharedAt`     | number | 分享时间，即获得收益的时间。单位秒 |\n| `Version`                     | string |                                    |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 59000 | 数据库查找失败 |"
					},
					"response": []
				},
				{
					"name": "generate_plot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"System\": \"win\",\n\t\"Size\": 256,\n\t\"Num\": 1,\n\t\"Path\": \".\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/plot/generate",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"plot",
								"generate"
							]
						},
						"description": "> 接口说明\n\n生成Plot文件\n\nPOST http://{{host}}/api/v1/plot/generate\n\n> 请求参数\n\n\n```json\n{\n\t\"System\": \"win\",\n\t\"Size\": 256,\n\t\"Num\": 1,\n\t\"Path\": \".\"\n}\n```\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"generateplotfile\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": [\n        {\n            \"Nonces\": 1,\n            \"NumericID\": \"3761127361285022785\",\n            \"Path\": \".\",\n            \"PlotFileName\": \"3761127361285022785_104_1\",\n            \"StartNonce\": 104\n        }\n    ],\n    \"Version\": \"1.0.0\"\n}\n```"
					},
					"response": []
				},
				{
					"name": "list_plots",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/plots/2f55736572732f7a68696a69652f4465736b746f702f6f6e636861696e2f73617665696f2f636c69656e7431",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"plots",
								"2f55736572732f7a68696a69652f4465736b746f702f6f6e636861696e2f73617665696f2f636c69656e7431"
							]
						},
						"description": "> 接口说明\n\n获取某个路径下的Plots文件\n\nGET http://{{host}}/api/v1/plots/hexPath\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getallplotfiles\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": [\n        {\n            \"Name\": \"3761127361285022785_0_96\",\n            \"Path\": \"/Users/zhijie/Desktop/onchain/saveio/client1\",\n            \"NumericID\": \"3761127361285022785\",\n            \"Nonce\": 96,\n            \"StartNonce\": 0,\n            \"Size\": 24576,\n            \"SplitSize\": 0\n        }\n    ],\n    \"Version\": \"1.0.0\"\n}\n```"
					},
					"response": []
				},
				{
					"name": "mine_plot_file",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"FileName\": \"7166201454802520897_0_8\",\n\t\"CreateSector\": true\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/plots/mine/file",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"plots",
								"mine",
								"file"
							]
						},
						"description": "> 请求参数\n\n\n|参数|说明|\n| ------| -----|\n| FileName | 要参加挖矿的文件（必填） |\n| CreateSector | 是否创建对应的扇区（可选） |\n\n\n> 返回结果\n\n```json\n\n{\n    \"Action\": \"addplotfoldertomine\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": [\n        {\n            \"TaskId\": \"4a06f3ba-f118-11eb-9221-88e9fe5b16bf\",\n            \"UpdateNodeTxHash\": \"21c79f7ec484ac44c449011e15c7b35c19fa13dbdfca608468600013b51f8982\",\n            \"CreateSectorTxHash\": \"389c28a7d029ab075c9d9c00ecbb83921df105ad56ef36466de3fd35c53fb248\"\n        },\n        {\n            \"TaskId\": \"53981710-f118-11eb-9221-88e9fe5b16bf\",\n            \"UpdateNodeTxHash\": \"\",\n            \"CreateSectorTxHash\": \"\"\n        }\n    ],\n    \"Version\": \"1.0.0\"\n}\n\n```"
					},
					"response": []
				},
				{
					"name": "mine_plot_dir",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"Directory\": \"./Chain-1/plots/AKdFAvschcCda5fyLabU9QV54FANWDZYAX/\",\n\t\"CreateSector\": true\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/plots/mine/directory",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"plots",
								"mine",
								"directory"
							]
						},
						"description": "> 请求参数\n\n\n|参数|说明|\n| ------| -----|\n| Directory | 要参加挖矿的目录（必填） |\n| CreateSector | 是否创建对应的扇区（可选） |\n\n\n> 返回结果\n\n```json\n\n{\n    \"Action\": \"addplotfoldertomine\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": [\n        {\n            \"TaskId\": \"4a06f3ba-f118-11eb-9221-88e9fe5b16bf\",\n            \"UpdateNodeTxHash\": \"21c79f7ec484ac44c449011e15c7b35c19fa13dbdfca608468600013b51f8982\",\n            \"CreateSectorTxHash\": \"389c28a7d029ab075c9d9c00ecbb83921df105ad56ef36466de3fd35c53fb248\"\n        },\n        {\n            \"TaskId\": \"53981710-f118-11eb-9221-88e9fe5b16bf\",\n            \"UpdateNodeTxHash\": \"\",\n            \"CreateSectorTxHash\": \"\"\n        }\n    ],\n    \"Version\": \"1.0.0\"\n}\n\n```"
					},
					"response": []
				},
				{
					"name": "get_proved_files",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/provedplots",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"provedplots"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "文件管理",
			"item": [
				{
					"name": "download",
					"item": [
						{
							"name": "get_download_file_list",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/downloadlist/0/0/100",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"downloadlist",
										"0",
										"0",
										"100"
									]
								},
								"description": "> 接口说明\n\n获取文件的下载列表\n\nGET http://{{host}}/api/v1/dsp/file/downloadlist/:type/:offset/:limit\n\n> 参数说明\n\n| 参数名       | 类型   | 必需 | 描述          | 示例 |\n| ------------ | ------ | ---- | ------------- | ---- |\n| `type` | string | 1    | 文件列表类型，0表示所有文件，1表示图片，2表示文档，3表示视频，4表示音频 |      |\n| `offset` | string | 1    | 分页偏移量, 可为0 |      |\n| `limit` | string | 1    | 分页条数, 可为0 |      |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getdownloadfilelist\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"List\": [\n            {\n                \"Hash\": \"Qmf35tjq6E51xrzoJz2xpgtnxcD7K97awgiPaaWcTswS6e\",\n                \"Name\": \"2019-09-06_17.24.47_LOG.log\",\n                \"Path\": \"Chain-0/Downloads/AHjjdbVLhfTyiNFEq2X8mFnnirZY1yK8Rq/2019-09-06_17.24.47_LOG.log\",\n                \"OwnerAddress\": \"AHjjdbVLhfTyiNFEq2X8mFnnirZY1yK8Rq\",\n                \"Url\": \"oni://share/b3178023\",\n                \"Size\": 2560,\n                \"DownloadCount\": 0,\n                \"DownloadAt\": 1583147688,\n                \"LastShareAt\": 0,\n                \"Profit\": 0,\n                \"ProfitFormat\": \"0\",\n                \"Privilege\": 0,\n                \"RealFileSize\": 2265\n            }\n        ],\n        \"TotalCount\": 1\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名                 | 类型   | 描述 |\n| ---------------------- | ------ | ---- |\n| `Action`               | string |      |\n| `Desc`                 | string |      |\n| `Error`                | number |      |\n| `Result`               | array  |      |\n| `Result.Hash`          | string |      |\n| `Result.Name`          | string |      |\n| `Result.Size`          | number |      |\n| `Result.DownloadCount` | number |      |\n| `Result.DownloadAt`    | number |      |\n| `Result.LastShareAt`   | number |      |\n| `Result.Profit`        | number |      |\n| `Version`              | string |      |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40001 | 系统内部错误 |\n| 40002 | 参数验证不正确 |\n| 40003 | DSP初始化失败 |\n| 59004 | 获取文件信息失败 |"
							},
							"response": []
						},
						{
							"name": "get_file_peer_count",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/peers/count/QmTjzCXr9FvMQmrvy7Xv18rTkEueofNVXE8aTC5Dvsmc7M",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"peers",
										"count",
										"QmTjzCXr9FvMQmrvy7Xv18rTkEueofNVXE8aTC5Dvsmc7M"
									]
								},
								"description": "> 接口说明\n\n获取文件的热点个数\n\nGET http://{{host}}/api/v1/dsp/file/peers/count/:hash\n\n> 参数说明\n\n| 参数名       | 类型   | 必需 | 描述          | 示例 |\n| ------------ | ------ | ---- | ------------- | ---- |\n| `hash` | string | 1    | 文件Hash |      |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getfilepeercount\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Count\": 3\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名         | 类型   | 描述 |\n| -------------- | ------ | ---- |\n| `Action`       | string |      |\n| `Desc`         | string |      |\n| `Error`        | number |      |\n| `Result`       | object |      |\n| `Result.Count` | number |      |\n| `Version`      | string |      |"
							},
							"response": []
						},
						{
							"name": "download_pause(等待channel同步完成才可调用）",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Ids\": [\n        \"efa97928-b33a-11e9-b4ef-88e9fe5b16bf\"\n    ]\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/download/pause",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"download",
										"pause"
									]
								},
								"description": "> 接口说明\n\n暂停下载任务\n\nPOST http://{{host}}/api/v1/dsp/file/download/pause\n\n> 请求参数\n\n```json\n{\n    \"Ids\": [\n        \"a2f20bc6-b14c-11e9-be43-88e9fe5b16bf\"\n    ]\n}\n```\n\n| 参数名 | 类型   | 必需 | 描述                 | 示例 |\n| ------ | ------ | ---- | -------------------- | ---- |\n| `Ids` | string | 0    | 要暂停下载的文件的任务Id列表 |      |\n\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"pausedownloadfile\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Tasks\": [\n            {\n                \"Id\": \"a2f20bc6-b14c-11e9-be43-88e9fe5b16bf\",\n                \"State\": 2,\n                   \"Result\": null,\n                \"Code\": 0,\n                \"Error\": \"\"\n            }\n        ]\n    },\n    \"Version\": \"1.0.0\"\n}\n```"
							},
							"response": []
						},
						{
							"name": "download_resume(等待channel同步完成才可调用）",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Ids\": [\n        \"efa97928-b33a-11e9-b4ef-88e9fe5b16bf\"\n    ]\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/download/resume",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"download",
										"resume"
									]
								},
								"description": "> 接口说明\n\n恢复下载任务\n\nPOST http://{{host}}/api/v1/dsp/file/download/resume\n\n> 请求参数\n\n```json\n{\n    \"Ids\": [\n        \"a2f20bc6-b14c-11e9-be43-88e9fe5b16bf\"\n    ]\n}\n```\n\n| 参数名 | 类型   | 必需 | 描述                 | 示例 |\n| ------ | ------ | ---- | -------------------- | ---- |\n| `Ids` | string | 0    | 要恢复下载的文件的任务Id列表 |      |\n\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"resumedownloadfile\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Tasks\": [\n            {\n                \"Id\": \"a2f20bc6-b14c-11e9-be43-88e9fe5b16bf\",\n                \"State\": 2,\n                   \"Result\": null,\n                \"Code\": 0,\n                \"Error\": \"\"\n            }\n        ]\n    },\n    \"Version\": \"1.0.0\"\n}\n```"
							},
							"response": []
						},
						{
							"name": "get_download_info",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/downloadinfo/736176653A2F2F73686172652F3738376463323635",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"downloadinfo",
										"736176653A2F2F73686172652F3738376463323635"
									]
								},
								"description": "> 接口说明\n\n获取文件的下载信息\n\nGET http://{{host}}/api/v1/dsp/file/downloadinfo/:hexUrl\n\n> 请求参数\n\n\n| 参数名 | 类型   | 必需 | 描述                 | 示例 |\n| ------ | ------ | ---- | -------------------- | ---- |\n| `url` | string | 0    | hex(url) 字符串，文件的下载链接 |  736176653A2F2F73686172652F3134663030623937    |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getdownloadinfo\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Hash\": \"QmReccYLBaZPfQxcj2SFAvHxScH4TJNyS4o5cG6Zt4tzqP\",\n        \"Name\": \"3bf2a1bbc71ec35d613abc45298b48ba.mp3\",\n        \"Ext\": \"mp3\",\n        \"Size\": 1536,\n        \"Fee\": 1572864,\n        \"FeeFormat\": \"0.001572864\",\n        \"Path\": \"Downloads/AL4sT6NpvxabRjtpxhJqVFuCniZUbSw3Bt/3bf2a1bbc71ec35d613abc45298b48ba.mp3\",\n        \"DownloadDir\": \"Downloads/AL4sT6NpvxabRjtpxhJqVFuCniZUbSw3Bt\"\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名               | 类型   | 描述 |\n| -------------------- | ------ | ---- |\n| `Action`             | string |      |\n| `Desc`               | string |      |\n| `Error`              | number |      |\n| `Result`             | object |      |\n| `Result.Hash`        | string |      |\n| `Result.Name`        | string |      |\n| `Result.Ext`         | string |      |\n| `Result.Size`        | number |      |\n| `Result.Fee`         | number |      |\n| `Result.FeeFormat`   | number |      |\n| `Version`            | string |      |\n| `Result.Path`        | string |      |\n| `Result.DownloadDir` | string |      |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40002 | 参数验证不正确 |\n| 55016 | 解析文件URL失败 |"
							},
							"response": []
						},
						{
							"name": "download_cancel",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Ids\": [\n       \"5e61bb4a-b6ca-11e9-9e4b-88e9fe5b16bf\"\n    ]\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/download/cancel",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"download",
										"cancel"
									]
								},
								"description": "> 接口说明\n\n取消下载任务\n\nPOST http://{{host}}/api/v1/dsp/file/download/cancel\n\n> 请求参数\n\n```json\n{\n    \"Ids\": [\n       \"3965312e-b6c9-11e9-a2c4-88e9fe5b16bf\"\n    ]\n}\n```\n\n| 参数名 | 类型  | 必需 | 描述       | 示例 |\n| ------ | ----- | ---- | ---------- | ---- |\n| `Ids`  | array | 1    | 任务id数组 |      |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"canceldownloadfile\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Tasks\": [\n            {\n                \"Id\": \"ab94a41c-b6c6-11e9-939c-88e9fe5b16bf\",\n                \"State\": 5,\n                \"Result\": null,\n                \"Code\": 55029,\n                \"Error\": \"fileinfo not found of QmTh3t3BbpdRskiH8m7dtaWjYmiS5FhH78nL2gTAhs8kzK\"\n            }\n        ]\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名                | 类型   | 描述 |\n| --------------------- | ------ | ---- |\n| `Result.Tasks.Id`     | string |      |\n| `Result.Tasks.State`  | number |      |\n| `Result.Tasks.Result` | string |      |\n| `Result.Tasks.Code`   | number |      |\n| `Result.Tasks.Error`  | string |      |"
							},
							"response": []
						},
						{
							"name": "commit_download_file_task(等待channel同步完成才可调用）",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"Id\": \"ad2bae52-b454-11e9-9631-88e9fe5b16bf\",\n    \"Url\": \"oni://share/fab5ad88\",\n    \"MaxPeerNum\": 10,\n    \"SetFileName\": true\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/download",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"download"
									]
								},
								"description": "> 详细说明\n\n提交下载任务\n\nPOST http://{{host}}/api/v1/dsp/file/download\n\n> 请求参数\n\n```json\n{\n    \"Hash\": \"1\",\n    \"Url\": \"2\",\n    \"Link\": \"3\",\n    \"Password\": \"\",\n    \"MaxPeerNum\": 10,\n    \"SetFileName\": true\n}\n```\n\n| 参数名        | 类型    | 必需 | 描述                               | 示例 |\n| ------------- | ------- | ---- | ---------------------------------- | ---- |\n| `Id`        | number  | 0    | （可选）任务ID           |      |\n| `Hash`        | number  | 0    | （可选）使用文件Hash下载           |      |\n| `Url`         | number  | 0    | （可选）使用文件Url下载            |      |\n| `Link`        | number  | 0    | （可选）使用文件Link下载           |      |\n| `Password`    | string  | 0    | （可选）对文件进行解密，解密的密码 |      |\n| `MaxPeerNum`  | number  | 0    | （可选）最大下载的节点个数         |      |\n| `SetFileName` | boolean | 0    | （可选) 下载完成后设置文件名 \t  |      |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"downloadfile\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": \"\",\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名    | 类型   | 描述 |\n| --------- | ------ | ---- |\n| `Action`  | string |      |\n| `Desc`    | string |      |\n| `Error`   | number |      |\n| `Result`  | string |      |\n| `Version` | string |      |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40001 | 系统内部错误 |\n| 56012 | 没有连接DNS |\n| 56013 | 通道余额不足 |\n| 56015 | 通道正在同步中 |"
							},
							"response": []
						},
						{
							"name": "download_failed_retry(等待channel同步完成才可调用）",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Ids\": [\n        \"048071c0-f56d-11e9-828a-88e9fe5b16bf\"\n    ]\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/download/retry",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"download",
										"retry"
									]
								},
								"description": "> 接口说明\n\n重试失败的下载任务\n\nPOST http://{{host}}/api/v1/dsp/file/download/retry\n\n> 请求参数\n\n```json\n{\n    \"Ids\": [\n        \"a2f20bc6-b14c-11e9-be43-88e9fe5b16bf\"\n    ]\n}\n```\n\n| 参数名 | 类型   | 必需 | 描述                 | 示例 |\n| ------ | ------ | ---- | -------------------- | ---- |\n| `Ids` | string | 0    | 要重试下载的文件的任务Id列表 |      |\n\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"retrydownloadfile\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Tasks\": [\n            {\n                \"Id\": \"a2f20bc6-b14c-11e9-be43-88e9fe5b16bf\",\n                \"State\": 2,\n                   \"Result\": null,\n                \"Code\": 0,\n                \"Error\": \"\"\n            }\n        ]\n    },\n    \"Version\": \"1.0.0\"\n}\n```"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "transfer",
					"item": [
						{
							"name": "get_transferlist_detail",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/transfer/detail/0/6f6e693a2f2f73686172652f3735386133663662",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"transfer",
										"detail",
										"0",
										"6f6e693a2f2f73686172652f3735386133663662"
									]
								},
								"description": "> 接口说明\n\n获取特定传输任务详情\n\nGET http://{{host}}/api/v1/dsp/file/transfer/detail/:type/:hexId\n\n> 请求参数\n\n| 参数名       | 类型   | 必需 | 描述          | 示例 |\n| ------------ | ------ | ---- | ------------- | ---- |\n| `type` | string | 1    | 传输列表类型;0:传输完成（包括上传/下载） 1: 上传中 2: 下载中; 3 所有类型 |      |\n| `hexiD` | string | 1    | 对url进行hex编码后的值 |      |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"gettransferdetail\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Id\": \"dd2fccd8-e036-11e9-9e2d-88e9fe5b16bf\",\n        \"FileHash\": \"QmcP45Vc1dV6bv9NQAUYtiKEDpWMNvgWm8wW24rzeJBa4i\",\n        \"FileName\": \"[Python编程(第4版)].(Programming.Python.4th.Edition).Mark.Lutz.文字版.pdf\",\n        \"Type\": 3,\n        \"Status\": 3,\n        \"DetailStatus\": 25,\n        \"CopyNum\": 0,\n        \"Path\": \"/Users/zhijie/Desktop/onchain/save-test/node4/Chain-0/Downloads/ANe8fD9kxHV4xHP2XMAfdffEQUAS7bW9hi/[Python编程(第4版)].(Programming.Python.4th.Edition).Mark.Lutz.文字版 (1).pdf\",\n        \"IsUploadAction\": false,\n        \"UploadSize\": 0,\n        \"DownloadSize\": 30464,\n        \"FileSize\": 30464,\n        \"Nodes\": [\n            {\n                \"HostAddr\": \"tcp://137.116.137.14:10301\",\n                \"UploadSize\": 0,\n                \"DownloadSize\": 8448\n            },\n            {\n                \"HostAddr\": \"tcp://137.116.137.14:10401\",\n                \"UploadSize\": 0,\n                \"DownloadSize\": 16384\n            },\n            {\n                \"HostAddr\": \"tcp://137.116.137.14:10501\",\n                \"UploadSize\": 0,\n                \"DownloadSize\": 5632\n            }\n        ],\n        \"Progress\": 1,\n        \"CreatedAt\": 1569486185,\n        \"UpdatedAt\": 1569486325,\n        \"Result\": \"\",\n        \"ErrorCode\": 0,\n        \"StoreType\": 0,\n        \"Encrypted\": false\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名                  | 类型    | 描述 |\n| ----------------------- | ------- | ---- |\n| `Action`                | string  |      |\n| `Desc`                  | string  |      |\n| `Error`                 | number  |      |\n| `Result`                | object  |      |\n| `Result.Id`             | string  |      |\n| `Result.FileHash`       | string  |      |\n| `Result.FileName`       | string  |      |\n| `Result.Type`           | number  |      |\n| `Result.Status`         | number  |      |\n| `Result.DetailStatus`   | number  |      |\n| `Result.CopyNum`        | number  |      |\n| `Result.Path`           | string  |      |\n| `Result.IsUploadAction` | boolean |      |\n| `Result.UploadSize`     | number  |      |\n| `Result.DownloadSize`   | number  |      |\n| `Result.FileSize`       | number  |      |\n| `Result.Nodes`          | array   |      |\n| `Result.Progress`       | number  |      |\n| `Result.CreatedAt`      | number  |      |\n| `Result.UpdatedAt`      | number  |      |\n| `Result.ErrorCode`      | number  |      |\n| `Result.ErrMsg`         | string  |      |\n| `Result.StoreType`      | number  |      |\n| `Version`               | string  |      |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40001 | 系统内部错误 |\n| 40002 | 参数验证不正确 |"
							},
							"response": []
						},
						{
							"name": "get_transfer_list",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/transferlist/0/0/100/0/0/0/0",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"transferlist",
										"0",
										"0",
										"100",
										"0",
										"0",
										"0",
										"0"
									]
								},
								"description": "> 接口说明\n\n获取文件的传输列表\n\nGET http://{{host}}/api/v1/dsp/file/transferlist/:type/:offset/:limit/:createdAt/:createdAtEnd/:updatedAt/:updatedEnd\n\n> 请求参数\n\n\n| 参数名       | 类型   | 必需 | 描述          | 示例 |\n| ------------ | ------ | ---- | ------------- | ---- |\n| `type` | string | 1    | 传输列表类型;0:传输完成（包括上传/下载） 1: 上传中 2: 下载中 |      |\n| `offset` | string | 1    | 分页偏移量, 可为0 |      |\n| `limit` | string | 1    | 分页条数, 可为0 |      |\n| `createdAt` | string |  1  | 任务创建时间, 可为0， 单位毫秒 |  1582282692000 与 createdAtEnd连用 形成 (createdAt, createdAtEnd] 区间   |\n| `updatedAt` | string | 1    | 任务更新时间, 可为0， 单位毫秒 |   1582282692000   |\n| `createdAtEnd` | string |  1  | 截止的任务创建时间, 可为0， 单位毫秒 |  1582282692000  |\n| `updatedAtEnd` | string | 1    | 截止的任务更新时间, 可为0， 单位毫秒 |   1582282692000   与 updatedAtEnd 形成 (updatedAt, updatedAtEnd] 区间   |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"gettransferlist\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"IsTransfering\": false,\n        \"Transfers\": [\n            {\n                \"Id\": \"23c759fe-c59d-11e9-aa5e-88e9fe5b16bf\",\n                \"FileHash\": \"QmX5YfsNA6bBDBNbUYvFkb2ckpiJq35MdKKLgnH4bUUake\",\n                \"FileName\": \"2019-06-25_18.18.26_LOG.log\",\n                \"Type\": 0,\n                \"Status\": 3,\n                \"DetailStatus\": 0,\n                \"CopyNum\": 0,\n                \"Path\": \"/Users/zhijie/Desktop/onchain/save-test/node4/Downloads/AZDn74qWSGQk8cyfD7DXmkRoyeJkZ4RbSx/2019-06-25_18.18.26_LOG.log\",\n                \"IsUploadAction\": false,\n                \"UploadSize\": 0,\n                \"DownloadSize\": 11776,\n                \"FileSize\": 11776,\n                \"RealFileSize\": 11800,\n                \"Nodes\": [\n                    {\n                        \"HostAddr\": \"tcp://40.73.103.72:38942\",\n                        \"UploadSize\": 0,\n                        \"DownloadSize\": 4096,\n                        \"RealDownloadSize\": 4100,\n                        \"RealUploadSize\": 0,\n                        \"Speed\": 0\n                    },\n                    {\n                        \"HostAddr\": \"tcp://40.73.103.72:31428\",\n                        \"UploadSize\": 0,\n                        \"DownloadSize\": 4096,\n                        \"Speed\": 1,\n                    },\n                    {\n                        \"HostAddr\": \"tcp://40.73.103.72:38173\",\n                        \"UploadSize\": 0,\n                        \"DownloadSize\": 3584,\n                        \"Speed\": 2\n                    }\n                ],\n                \"Progress\": 1,\n                \"CreatedAt\": 1566561431,\n                \"UpdatedAt\": 1566561439,\n                \"ErrorCode\": 0,\n                \"StoreType\": 0,\n                \"Encrypted\": false\n            },\n            {\n                \"Id\": \"00414364-c59d-11e9-aa5e-88e9fe5b16bf\",\n                \"FileHash\": \"QmX5YfsNA6bBDBNbUYvFkb2ckpiJq35MdKKLgnH4bUUake\",\n                \"FileName\": \"2019-06-25_18.18.26_LOG.log\",\n                \"Type\": 0,\n                \"Status\": 3,\n                \"DetailStatus\": 0,\n                \"CopyNum\": 2,\n                \"Path\": \"/Users/zhijie/Desktop/onchain/save-test/edge_logs/node2/2019-06-25_18.18.26_LOG.log\",\n                \"IsUploadAction\": true,\n                \"UploadSize\": 35328,\n                \"DownloadSize\": 0,\n                \"FileSize\": 11776,\n                \"RealFileSize\": 11800,\n                \"Nodes\": [\n                    {\n                        \"HostAddr\": \"tcp://40.73.103.72:31428\",\n                        \"UploadSize\": 11776,\n                        \"DownloadSize\": 0,\n                        \"RealDownloadSize\": 0,\n                        \"RealUploadSize\": 4100,\n                    },\n                    {\n                        \"HostAddr\": \"tcp://40.73.103.72:38173\",\n                        \"UploadSize\": 11776,\n                        \"DownloadSize\": 0\n                    },\n                    {\n                        \"HostAddr\": \"tcp://40.73.103.72:38942\",\n                        \"UploadSize\": 11776,\n                        \"DownloadSize\": 0\n                    }\n                ],\n                \"Progress\": 1,\n                \"CreatedAt\": 1566561371,\n                \"UpdatedAt\": 1566561413,\n                \"Result\": {\n                    \"AddWhiteListTx\": \"\",\n                    \"BindDnsTx\": \"8b2180b0c50dc77166e24514bb1a01fdb56529dad52499aa188e19a587a5b1cf\",\n                    \"FileHash\": \"QmX5YfsNA6bBDBNbUYvFkb2ckpiJq35MdKKLgnH4bUUake\",\n                    \"Link\": \"save-link://QmX5YfsNA6bBDBNbUYvFkb2ckpiJq35MdKKLgnH4bUUake&name=2019-06-25_18.18.26_LOG.log&blocknum=46&tr=udp://40.73.102.177:6369/announce\",\n                    \"RegisterDnsTx\": \"f65bf853eeecb64776ddaac23d77ce458d9614e01749c3fe5409a76926ea81da\",\n                    \"Tx\": \"d1c7c7ac26acb55b7d98ae4706d3394e40d00e3f8d81c3b2db083349aad3ef56\",\n                    \"Url\": \"save://share/eaa0a454\"\n                },\n                \"ErrorCode\": 0,\n                \"StoreType\": 0,\n                \"Encrypted\": false\n            }\n        ]\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名                                | 类型    | 描述 |\n| ------------------------------------- | ------- | ---- |\n| `Result.IsTransfering`                | boolean |  是否正在传输文件    |\n| `Result.Transfers`                    | array   |   任务列表   |\n| `Result.Transfers.Id`                 | string  |  任务ID    |\n| `Result.Transfers.FileHash`           | string  | 文件Hash     |\n| `Result.Transfers.FileName`           | string  |  文件名称    |\n| `Result.Transfers.Type`               | number  |  传输列表类型 0:  传输完成（包括上传/下载） 1: 上传中 2: 下载中    |\n| `Result.Transfers.Status`             | number  |  传输的状态  0: 暂停  1: 准备中 2: 进行中 3: 完成 4: 出现异常 5: 已取消 6: 其他    |\n| `Result.Transfers.DetailStatus`       | number  | 进行中的任务具体细分的状态(0  : 无;1  : 任务暂停;2  : 任务继续;3  : 开始分片;4  : 分片完成;5  : 支付上链;6  : 支付上链完成;7  : 提交白名单信息;8  : 提交白名单信息完成;9  : 寻找存储节点;10 : 寻找存储节点完成 ;11 : 生成PDP证明数据;12 : 开始传输文件块数据;13 : 传输文件块数据完成;14 : 等待存储节点提交PDP证明;15 : 存储节点提交PDP证明完成;16 : 注册信息到DNS节点 ;17 : 注册信息到DNS节点完成 ;18 : 开始下载文件;19 : 文件下载中 ;20 : 文件下载完成，向DNS节点;)     |\n| `Result.Transfers.CopyNum`            | number  |  备份数    |\n| `Result.Transfers.Path`               | string  | 文件路径     |\n| `Result.Transfers.IsUploadAction`     | boolean |   文件的行为，是上传还是下载。 true表示 上传文件， false表示下载文件   |\n| `Result.Transfers.UploadSize`         | number  |  文件总上传大小（单位KB)， 注意： 上传是冗余备份的，所以 UploadSize = FileSize * Nodes.length 表示上传完成。 所以进度条 progress = UploadSize / (FileSize * Nodes.length)    |\n| `Result.Transfers.DownloadSize`       | number  |  文件总下载大小（单位KB) 进度条 progress = DownloadSize / FileSize    |\n| `Result.Transfers.FileSize`           | number  |   占用大小 （单位KB)， 当status=1，即准备中的时候，此时的文件大小为0  |\n| `Result.Transfers.RealFileSize`           | number  |  实际大小    |\n| `Result.Transfers.Nodes`              | array   |  传输的节点    |\n| `Result.Transfers.Nodes.HostAddr`     | string  |  传输的节点IP地址    |\n| `Result.Transfers.Nodes.UploadSize`   | number  |  节点传输上传数据的大小（单位KB)    |\n| `Result.Transfers.Nodes.RealUploadSize`   | number  |  节点传输上传实际大小    |\n| `Result.Transfers.Nodes.DownloadSize` | number  |  节点传输下载数据的大小（单位KB)    |\n| `Result.Transfers.Nodes.RealDownloadSize`   | number  |  节点传输实际大小    |\n| `Result.Transfers.CreatedAt`          | number  | 任务创建时间     |\n| `Result.Transfers.UpdatedAt`          | number  |   任务更新时间   |\n| `Result.Transfers.ErrorCode`          | number  |   错误码   |\n| `Result.Transfers.StoreType`          | number  | 上传类型     |\n| `Result.Transfers.Encrypted`          | boolean | 是否加密     |\n| `Result.Transfers.Progress`           | number  |  传输的进度    |\n| `Transfers.Result.AddWhiteListTx`     | string  |  添加白名单的交易tx    |\n| `Transfers.Result.BindDnsTx`          | string  | 绑定url的交易tx    |\n| `Transfers.Result.FileHash`           | string  | 文件hash     |\n| `Transfers.Result`                    | object  |  上传任务的结果    |\n| `Transfers.Result.RegisterDnsTx`      | string  |注册url的交易tx      |\n| `Transfers.Result.Url`                | string  |   文件分享链接   |\n| `Transfers.Result.Link`               | string  | 文件link     |\n| `Transfers.Result.Tx`                 | string  | 支付存储的交易tx     |\n| `Version`                             | string  |      |"
							},
							"response": []
						},
						{
							"name": "delete_complete_transferlist_record",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Ids\": [\n        \"1329d29c-b66c-11e9-ac70-88e9fe5b16bf\"\n    ]\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/transferlist/delete",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"transferlist",
										"delete"
									]
								},
								"description": "> 接口说明\n\n\n删除传输记录\n\n\nPOST http://{{host}}/api/v1/dsp/file/transferlist/delete\n\n> 请求参数\n\n```json\n{\n    \"Ids\": [\n        \"1329d29c-b66c-11e9-ac70-88e9fe5b16bf\"\n    ]\n}\n```\n\n| 参数名 | 类型  | 必需 | 描述                         | 示例 |\n| ------ | ----- | ---- | ---------------------------- | ---- |\n| `Ids`  | array | 1    | 要删除的已完成的任务的ID列表 |      |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"deletetransnferlist\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Tasks\": [\n            {\n                \"Id\": \"1329d29c-b66c-11e9-ac70-88e9fe5b16bf\",\n                \"State\": 5,\n                \"Result\": null,\n                \"Code\": 0,\n                \"Error\": \"\"\n            }\n        ]\n    },\n    \"Version\": \"1.0.0\"\n}\n```"
							},
							"response": []
						},
						{
							"name": "get_transfer_progress",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"Id\":\"ba17f540-c37e-11eb-97b6-7976b3bef653\"\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/transfer/progress",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"transfer",
										"progress"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_transfer_task_info",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"Id\":\"ca233e90-c513-11eb-afd1-9b276f09953d\"\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/transfer/task",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"transfer",
										"task"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "upload",
					"item": [
						{
							"name": "commit_upload_file_task",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"Id\": \"ad2bae52-b454-11e9-9631-88e9fe5b16bf\",\n    \"Path\": \"/Users/zhijie/Desktop/onchain/save-test/node3/Log/2019-06-16_21.48.40_LOG.log\",\n    \"Desc\": \"2019-06-16_21.48.40_LOG.log\",\n    \"Share\": false,\n    \"Privilege\": 2,\n    \"WhiteList\": [\n        \"AMTq13osTf9mcm58DT9ruVscu66tfrQD1P\"\n    ]\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/upload",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"upload"
									]
								},
								"description": "> 接口说明\n\n提交上传任务\n\nPOST http://{{host}}/api/v1/dsp/file/upload\n\n> 请求参数\n\n```json\n{\n    \"Path\": \"./wallet.dat\",\n    \"Desc\": \"wallet.dat\",\n    \"Duration\": 0,\n    \"Interval\": 3600,\n    \"Times\": 24,\n    \"Privilege\": 1,\n    \"CopyNum\": 0,\n    \"EncryptPassword\": \"\",\n    \"Url\": \"oni://share/12nsdhu\",\n    \"WhiteList\": [],\n    \"Share\": false,\n    \"StoreType\": 0\n}\n```\n\n| 参数名            | 类型   | 必需 | 描述                                                         | 示例                                                         |\n| ----------------- | ------ | ---- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| `Id`            | string | 0    | 任务ID                                                 |                                                              |\n| `Path`            | string | 1    | 文件所在路径                                                 |                                                              |\n| `Desc`            | string | 1    | 文件描述（默认为文件名称）                                   |                                                              |\n| `Interval`        | number | 0    | （可选参数，有默认值）文件证明的周期，单位为秒               |                                                              |\n| `Privilege`       | number | 0    | （可选参数，有默认值）文件权限，0为私密文件，1为公开文件，2为白名单才可下载 |                                                              |\n| `CopyNum`         | number | 0    | （可选参数，有默认值）文件的额外备份数。文件存储的所有节点 = （1 + 额外的备份数） |                                                              |\n| `EncryptPassword` | string | 0    | （可选参数）如果需要加密，加密的密码                         |                                                              |\n| `Url`             | string | 0    | （可选参数，有随机值）短链接                                 |                                                              |\n| `WhiteList`       | array  | 0    | （可选参数）如果是白名单权限，白名单的list                   | [\"0x7f8051d4bf3d5f6edb3971aa7ad113a3b13f7277\", \"0x7f8051d4bf3d5f6edb3971aa7ad113a3b13f7277\"] |\n| `Duration`        | number | 0    | （可选参数） 存储时长，单位为秒 (如果选择普通模式，则0表示空间到期时间） |                                                              |\n| `Share`           | string | 0    | （可选参数）是否允许分享文件， true/false                    |                                                              |\n| `StoreType`       | number | 1    | （可选参数) 0 表示普通上传， 1 表示专业上传                  |                                                              |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"uploadfile\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"CopyNum\": 2,\n        \"Encrypt\": false,\n        \"EncryptPassword\": \"\",\n        \"ExpiredHeight\": 2708138,\n        \"FileName\": \"dns_oom.log\",\n        \"FileSize\": 0,\n        \"Privilege\": 1,\n        \"ProveInterval\": 300,\n        \"Share\": false,\n        \"StorageType\": 0,\n        \"Url\": \"save://share/acbfc8c0\",\n        \"WhiteList\": []\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40001 | 系统内部错误 |\n| 40006 | 余额不足 |\n| 40010 | 白名单钱包地址不正确 |\n| 50001 | 获取区块高度失败 |\n| 54001 | 获取合约默认参数失败 |\n| 54002 | 获取用户空间失败 |\n| 54009 | 上传路径不正确 |\n| 54010 | pdp验证周期太短 |\n| 55013 | 上传URL已存在 |\n| 55022 | 上传任务已存在 |\n| 55063 | 自定义的过期时间太短 |"
							},
							"response": []
						},
						{
							"name": "upload_failed_retry",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Ids\": [\n        \"ace679e8-af79-11e9-a1c1-88e9fe5b16bf\"\n    ]\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/upload/retry",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"upload",
										"retry"
									]
								},
								"description": "> 接口说明\n\n文件重试上传\n\nPOST http://{{host}}/api/v1/dsp/file/upload/retry\n> 请求参数\n\n```json\n{\n    \"Ids\": [\n        \"ace679e8-af79-11e9-a1c1-88e9fe5b16bf\"\n    ]\n}\n```\n\n| 参数名 | 类型  | 必需 | 描述       | 示例 |\n| ------ | ----- | ---- | ---------- | ---- |\n| `Ids`  | array | 1    | 任务id数组 |      |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"retryuploadfile\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Tasks\": [\n            {\n                \"Id\": \"ad2bae52-b454-11e9-9631-88e9fe5b16bf\",\n                \"State\": 0,\n                \"Result\": null,\n                \"Code\": 0,\n                \"Error\": \"\"\n            }\n        ]\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名               | 类型   | 描述 |\n| -------------------- | ------ | ---- |\n| `Action`             | string |      |\n| `Desc`               | string |      |\n| `Error`              | number |      |\n| `Result`             | object |      |\n| `Result.Tasks`       | array  |      |\n| `Result.Tasks.Id`    | string |      |\n| `Result.Tasks.State` | number |      |\n| `Result.Tasks.Code`  | number |      |\n| `Result.Tasks.Error` | object |      |\n| `Version`            | string |      |"
							},
							"response": []
						},
						{
							"name": "get_file_whitelist",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/whitelist/zb2rhXxUYViaiwei3ZqygJic3koDu7hRhjaZorHu3AEMhBQyJ",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"whitelist",
										"zb2rhXxUYViaiwei3ZqygJic3koDu7hRhjaZorHu3AEMhBQyJ"
									]
								},
								"description": "> 详细说明\n\n获取文件的白名单列表\n\nGET http://{{host}}/api/v1/dsp/file/whitelist/:fileHash\n\n> 请求参数\n\n| 参数名               | 类型   | 必需 | 描述                                                         | 示例 |\n| -------------------- | ------ | ---- | ------------------------------------------------------------ | ---- |\n| `FileHash`           | string | 1    | 文件Hash                                                     |      |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getwhitelist\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": [\n        {\n            \"Addr\": \"AMTq13osTf9mcm58DT9ruVscu66tfrQD1P\",\n            \"StartHeight\": 99978,\n            \"ExpiredHeight\": 117978\n        }\n    ],\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名                 | 类型   | 描述 |\n| ---------------------- | ------ | ---- |\n| `Action`               | string |      |\n| `Desc`                 | string |      |\n| `Error`                | number |      |\n| `Result`               | array  |      |\n| `Result.Addr`          | string |      |\n| `Result.StartHeight`   | number |      |\n| `Result.ExpiredHeight` | number |      |\n| `Version`              | string |      |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40001 | 系统内部错误 |\n| 55020 | 获取白名单失败 |"
							},
							"response": []
						},
						{
							"name": "upload_pause",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Ids\": [\n        \"ad2bae52-b454-11e9-9631-88e9fe5b16bf\"\n    ]\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/upload/pause",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"upload",
										"pause"
									]
								},
								"description": "> 接口说明\n\n文件暂停上传\n\nPOST http://{{host}}/api/v1/dsp/file/upload/pause\n> 请求参数\n\n```json\n{\n    \"Ids\": [\n        \"ace679e8-af79-11e9-a1c1-88e9fe5b16bf\"\n    ]\n}\n```\n\n| 参数名 | 类型  | 必需 | 描述       | 示例 |\n| ------ | ----- | ---- | ---------- | ---- |\n| `Ids`  | array | 1    | 任务id数组 |      |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"pauseuploadfile\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Tasks\": [\n            {\n                \"Id\": \"ad2bae52-b454-11e9-9631-88e9fe5b16bf\",\n                \"State\": 0,\n                \"Result\": null,\n                \"Code\": 0,\n                \"Error\": \"\"\n            }\n        ]\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名               | 类型   | 描述 |\n| -------------------- | ------ | ---- |\n| `Action`             | string |      |\n| `Desc`               | string |      |\n| `Error`              | number |      |\n| `Result`             | object |      |\n| `Result.Tasks`       | array  |      |\n| `Result.Tasks.Id`    | string |      |\n| `Result.Tasks.State` | number |      |\n| `Result.Tasks.Code`  | number |      |\n| `Result.Tasks.Error` | object |      |\n| `Version`            | string |      |"
							},
							"response": []
						},
						{
							"name": "get_upload_file_info Copy",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/upload/info/QmUpYJR6vinNbUvCdRqr8LJKiwkpdyfetnzNJGfEZf46Kg",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"upload",
										"info",
										"QmUpYJR6vinNbUvCdRqr8LJKiwkpdyfetnzNJGfEZf46Kg"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_fs_setting",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/v1/smartcontract/fs/setting",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"smartcontract",
										"fs",
										"setting"
									]
								},
								"description": "> 接口说明\n\n获取合约设置\n\nGET http://{{host}}/api/v1/smartcontract/fs/setting\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getfscontractsetting\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"DefaultCopyNum\": 2,\n        \"DefaultProvePeriod\": 300,\n        \"MinChallengeRate\": 100,\n        \"MinVolume\": 1048576\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名                      | 类型   | 描述 |\n| --------------------------- | ------ | ---- |\n| `Action`                    | string |      |\n| `Desc`                      | string |      |\n| `Error`                     | number |      |\n| `Result`                    | object |      |\n| `Result.DefaultCopyNum`     | number |      |\n| `Result.DefaultProvePeriod` | number |      |\n| `Result.MinChallengeRate`   | number |      |\n| `Result.MinVolume`          | number |      |\n| `Version`                   | string |      |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40001 | 系统内部错误 |"
							},
							"response": []
						},
						{
							"name": "get_upload_file_info",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/upload/info/zb2rhZBz8dF65hUHcKmpm5GPhrC9d5naStD7PdGE3YS6vFVGC",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"upload",
										"info",
										"zb2rhZBz8dF65hUHcKmpm5GPhrC9d5naStD7PdGE3YS6vFVGC"
									]
								},
								"description": "> 接口说明\n\nGET http://{{host}}/api/v1/dsp/file/upload/info/:fileHash\n\n> 请求参数\n\n| 参数名               | 类型   | 必需 | 描述                                                         | 示例 |\n| -------------------- | ------ | ---- | ------------------------------------------------------------ | ---- |\n| `FileHash`           | string | 1    | 文件Hash                                                     |      |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getuploadfileinfo\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"FileHash\": \"QmRQukomiSHSSkcxQPn21NmoeP9AzCyAgLaTv5v8kbnamE\",\n        \"CreatedAt\": 1583746788,\n        \"CopyNum\": 2,\n        \"Interval\": 86400,\n        \"ProveTimes\": 5,\n        \"ExpiredHeight\": 258993,\n        \"Privilege\": 1,\n        \"OwnerAddress\": \"AHjjdbVLhfTyiNFEq2X8mFnnirZY1yK8Rq\",\n        \"Whitelist\": [],\n        \"ExpiredAt\": 1584098738,\n        \"CurrentHeight\": 188604,\n        \"Size\": 13568,\n        \"RealFileSize\": 13196,\n        \"StoreType\": 0,\n        \"BlocksRoot\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855674c6154763576386b626e616d45\",\n        \"Encrypt\": true\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名              | 类型   | 描述 |\n| ------------------- | ------ | ---- |\n| `Action`            | string |      |\n| `Desc`              | string |      |\n| `Error`             | number |      |\n| `Result`            | object |      |\n| `Result.FileHash`   | string |      |\n| `Result.CreatedAt`  | number |      |\n| `Result.CopyNum`    | number |      |\n| `Result.Interval`   | number |      |\n| `Result.ProveTimes` | number |      |\n| `Result.Privilege`  | number |      |\n| `Result.Whitelist`  | array  |      |\n| `Result.Encrypt`  | bool  |   是否加密   |\n| `Version`           | string |      |\n| `Result.ExpiredAt`  | number |      |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40001 | 系统内部错误 |\n| 50001 | 获取主链区块高度失败 |\n| 55100 | 文件未找到 |"
							},
							"response": []
						},
						{
							"name": "upload_resume",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Ids\": [\n        \"f3f8d930-699f-11ea-af6a-892e2fc2a002\"\n    ]\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/upload/resume",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"upload",
										"resume"
									]
								},
								"description": "> 接口说明\n\n文件暂停上传\n\nPOST http://{{host}}/api/v1/dsp/file/upload/resume\n> 请求参数\n\n```json\n{\n    \"Ids\": [\n        \"ace679e8-af79-11e9-a1c1-88e9fe5b16bf\"\n    ]\n}\n```\n\n| 参数名 | 类型  | 必需 | 描述       | 示例 |\n| ------ | ----- | ---- | ---------- | ---- |\n| `Ids`  | array | 1    | 任务id数组 |      |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"resumeuploadfile\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Tasks\": [\n            {\n                \"Id\": \"ad2bae52-b454-11e9-9631-88e9fe5b16bf\",\n                \"State\": 0,\n                \"Result\": null,\n                \"Code\": 0,\n                \"Error\": \"\"\n            }\n        ]\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名               | 类型   | 描述 |\n| -------------------- | ------ | ---- |\n| `Action`             | string |      |\n| `Desc`               | string |      |\n| `Error`              | number |      |\n| `Result`             | object |      |\n| `Result.Tasks`       | array  |      |\n| `Result.Tasks.Id`    | string |      |\n| `Result.Tasks.State` | number |      |\n| `Result.Tasks.Code`  | number |      |\n| `Result.Tasks.Error` | object |      |\n| `Version`            | string |      |"
							},
							"response": []
						},
						{
							"name": "upload_cancel",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"Password\": \"a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8\",\n\t\"GasLimit\": \"20000\",\n    \"Ids\": [\n        \"3f35de00-b6a6-11e9-b10e-88e9fe5b16bf\"\n    ]\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/upload/cancel",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"upload",
										"cancel"
									]
								},
								"description": "> 接口说明\n\n文件取消上传\n\nPOST http://{{host}}/api/v1/dsp/file/upload/cancel\n> 请求参数\n\n```json\n{\n    \"Ids\": [\n        \"ace679e8-af79-11e9-a1c1-88e9fe5b16bf\"\n    ]\n}\n```\n\n| 参数名     | 类型   | 必需 | 描述       | 示例 |\n| ---------- | ------ | ---- | ---------- | ---- |\n| `Ids`      | array  | 1    | 任务id数组 |      |\n| `GasLimit` | string | 1    | default: 20000，自定义合约费用Gas Limit， 祝：gas_limit * gas_price = gas费用, gas_price固定为500 | 20000 |\n| `Password` | string | 1    | 钱包密码   |      |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"canceluploadfile\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Tasks\": [\n            {\n                \"Id\": \"ad2bae52-b454-11e9-9631-88e9fe5b16bf\",\n                \"State\": 0,\n                \"Result\": null,\n                \"Code\": 0,\n                \"Error\": \"\"\n            }\n        ]\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名               | 类型   | 描述 |\n| -------------------- | ------ | ---- |\n| `Action`             | string |      |\n| `Desc`               | string |      |\n| `Error`              | number |      |\n| `Result`             | object |      |\n| `Result.Tasks`       | array  |      |\n| `Result.Tasks.Id`    | string |      |\n| `Result.Tasks.State` | number |      |\n| `Result.Tasks.Code`  | number |      |\n| `Result.Tasks.Error` | object |      |\n| `Version`            | string |      |"
							},
							"response": []
						},
						{
							"name": "get_uploadfile_list",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/uploadlist/0/0/101/0/0/0/0/0",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"uploadlist",
										"0",
										"0",
										"101",
										"0",
										"0",
										"0",
										"0",
										"0"
									]
								},
								"description": "> 接口说明 \n\n\n**GET http://{{host}}/api/v1/dsp/file/uploadlist/:type/:offset/:limit/:fliter/:createdAt/:createdAtEnd/:updatedAt/:updatedEnd**\n\n\n> 请求参数\n\n| 参数名               | 类型   | 必需 | 描述                                                         | 示例 |\n| -------------------- | ------ | ---- | ------------------------------------------------------------ | ---- |\n| `Type`           | string | 1    | 文件列表类型，0表示所有文件，1表示图片，2表示文档，3表示视频，4表示音频                                                     |      |\n| `Offset`           | string | 1    | 分页偏移量，第一个文件的偏移量为0                                                     |      |\n| `Limit`           | string | 1    | 返回的文件数量限制                                                     |      |\n| `Fliter`           | string | 0    | 0: 不做筛选。 1:  只返回未传输完成的数据。 2: 只返回传输完成的数据                                                     |      |\n| `createdAt` | string |  1  | 任务创建时间, 可为0， 单位毫秒 |  1582282692000 与 createdAtEnd连用 形成 (createdAt, createdAtEnd] 区间   |\n| `updatedAt` | string | 1    | 任务更新时间, 可为0， 单位毫秒 |   1582282692000   |\n| `createdAtEnd` | string |  1  | 截止的任务创建时间, 可为0， 单位毫秒 |  1582282692000  |\n| `updatedAtEnd` | string | 1    | 截止的任务更新时间, 可为0， 单位毫秒 |   1582282692000   与 updatedAtEnd 形成 (updatedAt, updatedAtEnd] 区间   |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getuploadfilelist\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"List\": [\n            {\n                \"Hash\": \"QmXb3V8U6fZ2KVUTYPsbGZtFCuT5Xg3sbrsS93wztgUBd8\",\n                \"Name\": \"2019-09-06_18.11.20_LOG.log\",\n                \"Encrypt\": false,\n                \"Url\": \"oni://share/e288c0b9\",\n                \"Size\": 20992,\n                \"DownloadCount\": 0,\n                \"ExpiredAt\": 1583429738,\n                \"CreatedAt\": 1583201744,\n                \"UpdatedAt\": 1583201805,\n                \"Profit\": 0,\n                \"Privilege\": 1,\n                \"CurrentHeight\": 121075,\n                \"ExpiredHeight\": 127274,\n                \"StoreType\": 0,\n                \"RealFileSize\": 20487,\n                \"Nodes\": [\n                    {\n                        \"HostAddr\": \"tcp://40.73.103.72:10303\",\n                        \"WalletAddr\": \"ASsNPuzPAuWCb9iFaJ4zh5Mu3KNisskz3U\",\n                        \"PdpProveNum\": 3,\n                        \"State\": 3,\n                        \"Index\": 0,\n                        \"UploadSize\": 20992\n                    },\n                    {\n                        \"HostAddr\": \"tcp://139.219.136.38:10304\",\n                        \"WalletAddr\": \"AVLKEGY31KGH9ncxmRZsaQ6kL3iYDkTp7d\",\n                        \"PdpProveNum\": 3,\n                        \"State\": 3,\n                        \"Index\": 1,\n                        \"UploadSize\": 20992\n                    },\n                    {\n                        \"HostAddr\": \"tcp://40.73.103.72:10301\",\n                        \"WalletAddr\": \"AKm4udt9JHxXEy8Zp2uynW5WEaCfu1JEWH\",\n                        \"PdpProveNum\": 3,\n                        \"State\": 3,\n                        \"Index\": 2,\n                        \"UploadSize\": 20992\n                    }\n                ]\n            }\n        ],\n        \"TotalCount\": 14\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回结果说明\n\n| 参数名                 | 类型   | 描述 |\n| ---------------------- | ------ | ---- |\n| `Result.Hash`          | string |   文件Hash  |\n| `Result.Name`          | string |   文件名称   |\n| `Result.Encrypt`          | bool |   文件是否加密   |\n| `Result.Size`          | number |   文件占用存储空间大小  |\n| `Result.DownloadCount` | number |   文件下载次数   |\n| `Result.ExpiredAt`     | number |   文件到期实际，单位秒   |\n| `Result.UpdatedAt`     | number |   文件最后更新时间，单位秒   |\n| `Result.Profit`        | number |   文件收益   |\n| `Result.Privilege`     | number |   文件权限   |\n| `Result.Url`           | string |   文件下载URL   |\n| `Result.StoreType`     | number |   存储类型       |\n| `Result.CurrentHeight` | number |   当前区块高度   |\n| `Result.ExpiredHeight` | number |   文件到期高度   |\n| `Result.RealFileSize`  | number |   文件实际大小   |\n| `Result.Nodes.HostAddr`| string |  存储节点IP信息 |\n| `Result.Nodes.WalletAddr`| string |  存储节点钱包地址信息 |\n| `Result.Nodes.PdpProveNum`| number |  存储节点PDP证明次数 |\n| `Result.Nodes.State`| number |  存储节点存储状态。0: 暂停  1: 准备中 2: 进行中 3: 完成 4: 出现异常  |\n| `Result.Nodes.UploadSize`| number |  文件上传的数据量大小，单位KB  |\n| `Result.Nodes.Index`| number |  节点存储顺序，0 表示上传的节点，其余为备份节点|\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 50001 | 获取区块高度失败 |\n| 54003 | 获取文件列表失败 |"
							},
							"response": []
						},
						{
							"name": "upload_file_fee",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/uploadfee/2F55736572732F7A68696A69652F4465736B746F702F6F6E636861696E2F736176652D746573742F6E6F6465342F4C6F67303732302F323031392D30372D32305F31362E32372E30305F4C4F472E6C6F67?duration=86400&interval=30&copyNum=2&whitelistCount=2&storeType=1",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"uploadfee",
										"2F55736572732F7A68696A69652F4465736B746F702F6F6E636861696E2F736176652D746573742F6E6F6465342F4C6F67303732302F323031392D30372D32305F31362E32372E30305F4C4F472E6C6F67"
									],
									"query": [
										{
											"key": "duration",
											"value": "86400"
										},
										{
											"key": "interval",
											"value": "30"
										},
										{
											"key": "copyNum",
											"value": "2"
										},
										{
											"key": "whitelistCount",
											"value": "2"
										},
										{
											"key": "storeType",
											"value": "1"
										}
									]
								},
								"description": "> 接口说明\n\n计算文件的上传费用\n\nGET http://{{host}}/api/v1/dsp/file/uploadfee/:hexfile\n\n\n> 请求参数\n\n| 参数名           | 类型   | 必需 | 描述                                                         | 示例  |\n| ---------------- | ------ | ---- | ------------------------------------------------------------ | ----- |\n| `file`       | string | 1    |  文件路径，注意转成Hex字符串 |  |\n| `duration`       | string | 0    | （可选参数） 存储时长，单位为秒  ( 当选择普通模式使用空间存储，0表示永久） | 86400 |\n| `interval`       | string | 0   | （可选参数，有默认值）文件证明的周期，单位为秒               | 30    |\n| `copyNum`        | string | 0    | （可选参数，有默认值）文件的额外备份数。文件存储的所有节点 = （1 + 额外的备份数） | 2     |\n| `whitelistCount` | string | 0    | （可选参数）白名单个数                                       | 2     |\n| `storeType`      | string | 0    | （可选参数）0表示普通， 1表示专业                            | 1     |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"uploadfilefee\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"TxFee\": 40000000,\n        \"TxFeeFormat\": \"0.04\",\n        \"StorageFee\": 43,\n        \"StorageFeeFormat\": \"0.000000043\",\n        \"ValidFee\": 1728000000,\n        \"ValidFeeFormat\": \"1.728\"\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名                    | 类型   | 描述 |\n| ------------------------- | ------ | ---- |\n| `Result.TxFee`            | number |      |\n| `Result.TxFeeFormat`      | number |      |\n| `Result.StorageFee`       | number |      |\n| `Result.StorageFeeFormat` | number |      |\n| `Result.ValidFee`         | number |      |\n| `Result.ValidFeeFormat`   | number |      |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40002 | 参数验证不正确 |\n| 50001 | 获取区块高度失败 |\n| 54001 | 获取合约默认参数失败 |\n| 54002 | 获取用户空间失败 |\n| 54011 | 获取文件大小失败 |\n| 54012 | 计算费用失败 |\n| 55011 | 用户空间到期 |"
							},
							"response": []
						},
						{
							"name": "update_file_whitelist",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"FileHash\": \"zb2rhYphmhRuFYMMZzaTxdcZhKfTeJWN6iXMnxmLWzS17yE4p\",\n    \"Operation\": 0,\n    \"List\": [\n        {\n            \"Addr\": \"ALspSTkzC6CW4yVCLpihACaG9LpGVmvf5D\",\n            \"StartHeight\": 1,\n            \"ExpiredHeight\": 1000001\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/updatewhitelist",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"updatewhitelist"
									]
								},
								"description": "> 接口说明\n\n更新白名单列表，白名单的有效期\n\nPOST http://{{host}}/api/v1/dsp/file/updatewhitelist\n\n> 请求参数\n\n```json\n{\n    \"FileHash\": \"zb2rhYphmhRuFYMMZzaTxdcZhKfTeJWN6iXMnxmLWzS17yE4p\",\n    \"Operation\": 0,\n    \"List\": [\n        {\n            \"Addr\": \"AVNMY8bTy5dXvYPLsLSn8FG2HCGGV4QrWd\",\n            \"StartHeight\": 1,\n            \"ExpiredHeight\": 1000000\n        }\n    ]\n}\n```\n\n| 参数名               | 类型   | 必需 | 描述                                                         | 示例 |\n| -------------------- | ------ | ---- | ------------------------------------------------------------ | ---- |\n| `FileHash`           | string | 1    | 文件Hash                                                     |      |\n| `Operation`          | number | 1    | 白名单操作类型。0表示新增白名单或替换已存在的白名单，1表示删除 |      |\n| `List`               | array  | 1    | 白名单列表                                                   |      |\n| `List.Addr`          | string | 1    | 白名单的钱包地址                                             |      |\n| `List.StartHeight`   | number | 0    | 白名单访问权限的起始的区块高度                               |      |\n| `List.ExpiredHeight` | number | 0    | 白名单访问权限的结束的区块高度                               |      |\n\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"updatewhitelist\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": \"7e79a5a0054df770531bc6ac71989fadee52ac5718ea7bd508e1a1ae5aa16b8d\",\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名    | 类型   | 描述 |\n| --------- | ------ | ---- |\n| `Action`  | string |      |\n| `Desc`    | string |      |\n| `Error`   | number |      |\n| `Result`  | string |      |\n| `Version` | string |      |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40001 | 系统内部错误 |\n| 55019 | 更新白名单失败 |"
							},
							"response": []
						},
						{
							"name": "prove_detail",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/prove/detail/zb2rhWenLvwPzp1jz2neKsxgsd8KtYa4RB7WGwo5kMFp1Gj7a",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"prove",
										"detail",
										"zb2rhWenLvwPzp1jz2neKsxgsd8KtYa4RB7WGwo5kMFp1Gj7a"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "delete",
					"item": [
						{
							"name": "delete_files",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"Password\": \"a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8\",\n        \"GasLimit\": \"20000\",\n        \"Hash\": [\"zb2rhjjnz9FWwWXG9gKAkQ7cK3sWic85zYninCtXyR5ypACMT\",\"QmVfwMgYrSAdAtaKZQAen2eg9TcNoow6AsdJ8wCmbjWFGt\",\"QmczFjd9y8Xmjv6tRApWnnkHXzKKCSo5xkWRQc1q6mxthT\",\"zb2rhh8SrwUgaVbPHWb83GYsZ7LARhcgKJVputGPYUJaehCCM\",\"zb2rhbQEz8nUdmZkLQDpo7mXiV3ddiLonkYLqzDRCDsji6X3o\",\"zb2rhgCbhRPMHeJzAfEEHgf5KCdT81JNAQGBFfcxbZ83KGzic\"]\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/files/delete",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"files",
										"delete"
									]
								},
								"description": "> 接口说明\n\n批量删除文件\n\nPOST http://{{host}}/api/v1/dsp/files/delete\n\n> 请求参数\n\n```json\n{\n    \"Hash\": [\n        \"QmPwcbv9LhLQqdzeGStHAidozn5csX3kQWNzY8FBZtYXS8\",\n        \"QmaLLman6eVbtA9GDkGsX7gSaGqR3n27Z8RLatnE7RU16j\"\n    ]\n}\n```\n\n| 参数名     | 类型   | 必需 | 描述                   | 示例 |\n| ---------- | ------ | ---- | ---------------------- | ---- |\n| `Hash`     | number | 1    | 要删除的文件的Hash列表 |      |\n| `GasLimit` | string | 1    | default: 20000，自定义合约费用Gas Limit， 祝：gas_limit * gas_price = gas费用, gas_price固定为500 | 20000 |\n| `Password` | string | 1    | 钱包密码               |      |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"deletefiles\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": [\n        {\n            \"Tx\": \"72dfa87de2de225cae8051b606a4e943555b0ddc6a84ce7a7ba2b3ba8a88aeea\",\n            \"FileHash\": \"QmPwcbv9LhLQqdzeGStHAidozn5csX3kQWNzY8FBZtYXS8\",\n            \"FileName\": \"2019-07-27_12.11.17_LOG.log\",\n            \"Nodes\": [\n                {\n                    \"HostAddr\": \"tcp://40.73.103.72:38173\",\n                    \"Code\": 60002,\n                    \"Error\": \"file info hasn't been deleted\"\n                },\n                {\n                    \"HostAddr\": \"tcp://40.73.103.72:38942\",\n                    \"Code\": 60002,\n                    \"Error\": \"file info hasn't been deleted\"\n                },\n                {\n                    \"HostAddr\": \"tcp://40.73.103.72:31428\",\n                    \"Code\": 0,\n                    \"Error\": \"\"\n                }\n            ],\n            \"IsUploaded\": true\n        },\n        {\n            \"Tx\": \"72dfa87de2de225cae8051b606a4e943555b0ddc6a84ce7a7ba2b3ba8a88aeea\",\n            \"FileHash\": \"QmaLLman6eVbtA9GDkGsX7gSaGqR3n27Z8RLatnE7RU16j\",\n            \"FileName\": \"2019-07-27_11.11.58_LOG.log\",\n            \"Nodes\": [\n                {\n                    \"HostAddr\": \"tcp://40.73.103.72:38942\",\n                    \"Code\": 60002,\n                    \"Error\": \"file info hasn't been deleted\"\n                },\n                {\n                    \"HostAddr\": \"tcp://40.73.103.72:38173\",\n                    \"Code\": 0,\n                    \"Error\": \"\"\n                },\n                {\n                    \"HostAddr\": \"tcp://40.73.103.72:31428\",\n                    \"Code\": 60002,\n                    \"Error\": \"file info hasn't been deleted\"\n                }\n            ],\n            \"IsUploaded\": true\n        }\n    ],\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名                  | 类型    | 描述 |\n| ----------------------- | ------- | ---- |\n| `Result.Tx`             | string  |      |\n| `Result.Nodes`          | array   |      |\n| `Result.Nodes.HostAddr` | string  |      |\n| `Result.Nodes.Code`     | number  |      |\n| `Result.Nodes.Error`    | string  |      |\n| `Result.IsUploaded`     | boolean |      |\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 55014 | 删除文件失败 |"
							},
							"response": []
						},
						{
							"name": "delete_file",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Hash\": \"zb2rhZJAJG2FuGKrXeWNtWTvq8gptYwpX1mvKYEwFizNRNKAv\"\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/delete",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"delete"
									]
								},
								"description": "> 详细说明\n\n删除文件如果是上传的文件，则会删除对应存储节点所存的文件。如果是下载的文件，则删除本地文件\n\nPOST http://{{host}}/api/v1/dsp/file/delete\n\n> 请求参数\n\n```json\n{\n    \"Hash\": \"1\"\n}\n```\n\n| 参数名     | 类型   | 必需 | 描述               | 示例 |\n| ---------- | ------ | ---- | ------------------ | ---- |\n| `Hash`     | number | 1    | 要删除的文件的Hash |      |\n| `GasLimit` | string | 1    | default: 20000，自定义合约费用Gas Limit， 祝：gas_limit * gas_price = gas费用, gas_price固定为500 | 20000 |\n| `Password` | string | 1    | 钱包密码           |      |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"deletefile\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Tx\": \"ba09dfae971f66c768f73d38cd4438b085777925c13565e8af246526fae1102b\",\n        \"Nodes\": [\n            {\n                \"HostAddr\": \"tcp://40.73.100.114:31768\",\n                \"Code\": 0,\n                \"Error\": \"\"\n            }\n        ],\n        \"IsUploaded\": true\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名                  | 类型    | 描述 |\n| ----------------------- | ------- | ---- |\n| `Result.Tx`             | string  |      |\n| `Result.Nodes`          | array   |      |\n| `Result.Nodes.HostAddr` | string  |      |\n| `Result.Nodes.Code`     | number  |      |\n| `Result.Nodes.Error`    | string  |      |\n| `Result.IsUploaded`     | boolean |      |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 55014 | 删除文件失败 |"
							},
							"response": []
						},
						{
							"name": "delete_files_fee",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/javascript",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Action\": \"deletefilesfee\",\n    \"Desc\": \"FILES NOT FOUND ON CHAIN, HASHS: [ZB2RHMMCSQERCT5MZ2FRYCBVEFHNY9FAHS3OH5C6KJ5PPB2QB]\",\n    \"Error\": 54013,\n    \"Result\": {\n        \"GasPrice\": 500,\n        \"GasLimit\": 21005\n    },\n    \"Version\": \"1.0.0\"\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/files/deletefee?hash=zb2rhjjnz9FWwWXG9gKAkQ7cK3sWic85zYninCtXyR5ypACMT&hash=QmVfwMgYrSAdAtaKZQAen2eg9TcNoow6AsdJ8wCmbjWFGt&hash=QmczFjd9y8Xmjv6tRApWnnkHXzKKCSo5xkWRQc1q6mxthT&hash=zb2rhh8SrwUgaVbPHWb83GYsZ7LARhcgKJVputGPYUJaehCCM&hash=zb2rhbQEz8nUdmZkLQDpo7mXiV3ddiLonkYLqzDRCDsji6X3o&hash=zb2rhgCbhRPMHeJzAfEEHgf5KCdT81JNAQGBFfcxbZ83KGzic",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"files",
										"deletefee"
									],
									"query": [
										{
											"key": "hash",
											"value": "zb2rhjjnz9FWwWXG9gKAkQ7cK3sWic85zYninCtXyR5ypACMT"
										},
										{
											"key": "hash",
											"value": "QmVfwMgYrSAdAtaKZQAen2eg9TcNoow6AsdJ8wCmbjWFGt"
										},
										{
											"key": "hash",
											"value": "QmczFjd9y8Xmjv6tRApWnnkHXzKKCSo5xkWRQc1q6mxthT"
										},
										{
											"key": "hash",
											"value": "zb2rhh8SrwUgaVbPHWb83GYsZ7LARhcgKJVputGPYUJaehCCM"
										},
										{
											"key": "hash",
											"value": "zb2rhbQEz8nUdmZkLQDpo7mXiV3ddiLonkYLqzDRCDsji6X3o"
										},
										{
											"key": "hash",
											"value": "zb2rhgCbhRPMHeJzAfEEHgf5KCdT81JNAQGBFfcxbZ83KGzic"
										}
									]
								},
								"description": "> 接口说明\n\n计算批量删除文件的费用,当文件hash在链上查找不到，接口Desc会描述没有找到的文件hash列表，Result会返回链上存在文件的删除费用总和\n\nGET http://{{host}}/api/v1/dsp/files/deletefee&hash={{hash1}}&hash={{hash2}}\n\n> 返回示例\n\n示例正确\n\n请求: curl -X GET \"http://127.0.0.1:10335/api/v1/dsp/files/deletefee?hash=zb2rhd6g7ricr1QrUqwNTW1oEkmu2DJxUMy1MzCeuXtavDMWA&hash=zb2rhZUmX6CQxC8buTPgMvF3CM7TTuZzbJCc5Aae5jhZy6Woo&hash=zb2rhXquZbkxBY8ohwSRhDA3Ukm4GCGhsaXqL5Scfvt22fN1a&hash=QmRYEc5EnfwAXBXZ4v9NJQVRBNJ5Ccd1Umo89vi5Wgzwvg&hash=zb2rhissFTXP8KwK1rToJpGv3kWntCuQNPrKTWJNMw74MxZeS&hash=zb2rhff6Wb9bcz1sC6kZcM77v8c8WnzjSsw2KXD5aP6Za6da1&hash=zb2rhauVJrYEZYQsaCg3aA3fUgtasXspe7AsdKd5bZsoJeaH7&hash=Qmdene59dxRT31Pm2GfEVra4RnXU8PcCzPdZ5j78kU4chE&hash=zb2rhfNv1dSegiszmGyyahpqtb2JjPu9tHq26XKXXgRaPNfpt&hash=QmeMfzX5x6tiBCztVQvwEWPWGFWNFsj1frBBqRXhngKCDa&hash=zb2rhiVxGckJ4fZPeWUrrLrJwboSheZ2neUoXgd8FAtRnPV23&hash=QmUNjqpJcx1ZJFFhR5h7AQs6Z1g1xZFgw49qMpZXoF2cy7&hash=zb2rhfMtSyijdWvNLKvAq4yg8cyn3vDcunTzZ9R2RQcPaBoHc&hash=zb2rhfiARTHP3Y14H7tAKvRY7qYgBQ1R1Yb4LAvPPsCwovKh9&hash=zb2rhZ6wb7pZKoKSw94VMZX94ZEdJbHvfPvWTmkE6CY6eWuDk&hash=zb2rhnTdeWtYiYAgU3UP8vodeDZQh2CcEEMz8eYL4y2oj5mJS&hash=zb2rhfmgDLgTb91fAM1878MxpKQPaojkVBrUeGuDPWjgbeVhS&hash=zb2rhXn5ha3ECQnREpcccnJ9WARQUA2bJHzkDEp94H8nkHbtz&hash=zb2rhiHLcQKDSZTuX8dFaW9d6ZLogfeXM95KxcBMVAhV1iT8t&hash=zb2rhYtEY5CgYGGoFa74FfPGARrQ1euAUw3KFLRgyXj5bF9wg&hash=zb2rhf66ZMi5PVzagxAc2HZSg8G5FeV51WQnqvguzpuL4cbNq&hash=zb2rhkgYpqpRiU4b2G8SM3ks8vt8Yjjk1t9WobL6JssfiX7QV&hash=zb2rhmmCsQerct5Mz2fRyCBVefhnY9fAHS3oH5c6kj5pPb2Qa\"\n\n响应：\n```json\n{\n    \"Action\": \"deletefilesfee\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"GasPrice\": 500,\n        \"GasLimit\": 21005\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n错误示例\n\n请求：curl -X GET \"http://127.0.0.1:10335/api/v1/dsp/files/deletefee?hash=zb2rhd6g7ricr1QrUqwNTW1oEkmu2DJxUMy1MzCeuXtavDMWA&hash=zb2rhZUmX6CQxC8buTPgMvF3CM7TTuZzbJCc5Aae5jhZy6Woo&hash=zb2rhXquZbkxBY8ohwSRhDA3Ukm4GCGhsaXqL5Scfvt22fN1a&hash=QmRYEc5EnfwAXBXZ4v9NJQVRBNJ5Ccd1Umo89vi5Wgzwvg&hash=zb2rhissFTXP8KwK1rToJpGv3kWntCuQNPrKTWJNMw74MxZeS&hash=zb2rhff6Wb9bcz1sC6kZcM77v8c8WnzjSsw2KXD5aP6Za6da1&hash=zb2rhauVJrYEZYQsaCg3aA3fUgtasXspe7AsdKd5bZsoJeaH7&hash=Qmdene59dxRT31Pm2GfEVra4RnXU8PcCzPdZ5j78kU4chE&hash=zb2rhfNv1dSegiszmGyyahpqtb2JjPu9tHq26XKXXgRaPNfpt&hash=QmeMfzX5x6tiBCztVQvwEWPWGFWNFsj1frBBqRXhngKCDa&hash=zb2rhiVxGckJ4fZPeWUrrLrJwboSheZ2neUoXgd8FAtRnPV23&hash=QmUNjqpJcx1ZJFFhR5h7AQs6Z1g1xZFgw49qMpZXoF2cy7&hash=zb2rhfMtSyijdWvNLKvAq4yg8cyn3vDcunTzZ9R2RQcPaBoHc&hash=zb2rhfiARTHP3Y14H7tAKvRY7qYgBQ1R1Yb4LAvPPsCwovKh9&hash=zb2rhZ6wb7pZKoKSw94VMZX94ZEdJbHvfPvWTmkE6CY6eWuDk&hash=zb2rhnTdeWtYiYAgU3UP8vodeDZQh2CcEEMz8eYL4y2oj5mJS&hash=zb2rhfmgDLgTb91fAM1878MxpKQPaojkVBrUeGuDPWjgbeVhS&hash=zb2rhXn5ha3ECQnREpcccnJ9WARQUA2bJHzkDEp94H8nkHbtz&hash=zb2rhiHLcQKDSZTuX8dFaW9d6ZLogfeXM95KxcBMVAhV1iT8t&hash=zb2rhYtEY5CgYGGoFa74FfPGARrQ1euAUw3KFLRgyXj5bF9wg&hash=zb2rhf66ZMi5PVzagxAc2HZSg8G5FeV51WQnqvguzpuL4cbNq&hash=zb2rhkgYpqpRiU4b2G8SM3ks8vt8Yjjk1t9WobL6JssfiX7QV&hash=zb2rhmmCsQerct5Mz2fRyCBVefhnY9fAHS3oH5c6kj5pPb2Qb\"\n\n响应：\n```json\n{\n    \"Action\": \"deletefilesfee\",\n    \"Desc\": \"FILES NOT FOUND ON CHAIN, HASHS: [ZB2RHMMCSQERCT5MZ2FRYCBVEFHNY9FAHS3OH5C6KJ5PPB2QB]\",\n    \"Error\": 54013,\n    \"Result\": {\n        \"GasPrice\": 500,\n        \"GasLimit\": 21005\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名                  | 类型    | 描述      |\n| ----------------------- | ------- | --------- |\n| `Result.GasPrice`       | number  | 固定500   |\n| `Result.GasLimit`       | number  | 最小20000 |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 54013 | 获取删除文件失败费用 |"
							},
							"response": []
						},
						{
							"name": "delete_downloaded_file",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Password\": \"a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8\",\n    \"Hash\": \"QmSK6XyWeU3ky5xpHKYpRTtawtZawVfjxHcrBurFKGwmeB\"\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/download/delete",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"download",
										"delete"
									]
								},
								"description": "> 详细说明\n\n删除本地已下载的文件及插件\n\nPOST http://{{host}}/api/v1/dsp/file/download/delete\n\n> 请求参数\n\n```json\n{\n    \"Hash\": \"QmSK6XyWeU3ky5xpHKYpRTtawtZawVfjxHcrBurFKGwmeB\",\n    \"Password\": \"a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8\"\n}\n```\n\n| 参数名     | 类型   | 必需 | 描述               | 示例 |\n| ---------- | ------ | ---- | ------------------ | ---- |\n| `Hash`     | number | 1    | 要删除的文件的Hash |      |\n| `Password` | string | 1    | 钱包密码           |      |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"deletedownloadfile\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": null,\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名                  | 类型    | 描述 |\n| ----------------------- | ------- | ---- |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 55014 | 删除文件失败 |"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "userspace",
					"item": [
						{
							"name": "get_userspace_records",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/client/userspacerecords/AQF3z56sYHes3aP893aNRG19ufAcxQwUku/0/100",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"client",
										"userspacerecords",
										"AQF3z56sYHes3aP893aNRG19ufAcxQwUku",
										"0",
										"100"
									]
								},
								"description": "> 接口说明\n\n获取用户空间调整记录\n\nGET http://{{host}}/api/v1/client/userspacerecords/:addr/:offset/:limit\n\n> 请求参数\n\n\n| 参数名       | 类型   | 必需 | 描述          | 示例 |\n| ------------ | ------ | ---- | ------------- | ---- |\n| `addr` | string | 1    | 钱包地址 |      |\n| `offset` | string | 1    | 分页偏移量, 可为0 |      |\n| `limit` | string | 1    | 分页条数, 可为0 |      |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getuserspacerecords\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Records\": [\n            {\n                \"Size\": 2048,\n                \"ExpiredAt\": 1559732045,\n                \"Cost\": 21600,\n                \"CostFormat\": \"0.0000216\"\n            },\n            {\n                \"Size\": 2048,\n                \"ExpiredAt\": 1559732045,\n                \"Cost\": 33177636,\n                \"CostFormat\": \"0.033177636\"\n            },\n            {\n                \"Size\": 1024,\n                \"ExpiredAt\": 1559728445,\n                \"Cost\": 11059236,\n                \"CostFormat\": \"0.011059236\"\n            }\n        ]\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名                      | 类型   | 描述 |\n| --------------------------- | ------ | ---- |\n| `Action`                    | string |      |\n| `Desc`                      | string |      |\n| `Error`                     | number |      |\n| `Result`                    | object |      |\n| `Result.Records`            | array  |      |\n| `Result.Records.Size`       | number |      |\n| `Result.Records.ExpiredAt`  | number |      |\n| `Result.Records.Cost`       | number |      |\n| `Result.Records.CostFormat` | number |      |\n| `Version`                   | string |      |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 59002 | 从数据库获取空间操作记录失败 |"
							},
							"response": []
						},
						{
							"name": "get_user_space",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/client/userspace/AKg57FvzHNC6Q4F6Mge6aio6uhfo9cLaQ8",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"client",
										"userspace",
										"AKg57FvzHNC6Q4F6Mge6aio6uhfo9cLaQ8"
									]
								},
								"description": "> 接口说明\n\n获取用户购买的空间信息\n\nGET http://{{host}}/api/v1/dsp/client/userspace/:addr\n\n\n> 请求参数\n\n| 参数名       | 类型   | 必需 | 描述          | 示例 |\n| ------------ | ------ | ---- | ------------- | ---- |\n| `addr` | string | 1    | 钱包地址 |      |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getuserspacesss\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Used\": 73216,\n        \"Remain\": 29184,\n        \"ExpiredAt\": 1563889340,\n        \"Balance\": 5745021522,\n        \"CurrentHeight\": 630016,\n        \"ExpiredHeight\": 641649\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名                 | 类型   | 描述 |\n| ---------------------- | ------ | ---- |\n| `Action`               | string |      |\n| `Desc`                 | string |      |\n| `Error`                | number |      |\n| `Result`               | object |      |\n| `Result.Used`          | number |      |\n| `Result.Remain`        | number |      |\n| `Result.ExpiredAt`     | number |      |\n| `Result.Balance`       | number |      |\n| `Version`              | string |      |\n| `Result.CurrentHeight` | number |      |\n| `Result.ExpiredHeight` | number |      |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40001 | 系统内部错误 |\n| 40002 | 参数验证失败 |"
							},
							"response": []
						},
						{
							"name": "set_user_space_cost",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Addr\": \"AHxaHDHAEYPVLiKisr6AyPveAPtRhUa2RL\",\n    \"Size\": {\n        \"Type\": 2,\n        \"Value\": 1\n    },\n    \"Second\": {\n        \"Type\": 2,\n        \"Value\": 10\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/client/userspace/cost",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"client",
										"userspace",
										"cost"
									]
								},
								"description": "> 接口说明\n\n计算调整空间需要消耗的费用\n\n\nPOST http://{{host}}/api/v1/dsp/client/userspace/cost\n\n> 请求参数\n\n```json\n{\n    \"Addr\": \"AHxaHDHAEYPVLiKisr6AyPveAPtRhUa2RL\",\n    \"Size\": {\n        \"Type\": 1,\n        \"Value\": 1024\n    },\n    \"Second\": {\n        \"Type\": 1,\n        \"Value\": 3600\n    }\n}\n```\n\n| 参数名         | 类型   | 必需 | 描述                                                  | 示例 |\n| -------------- | ------ | ---- | ----------------------------------------------------- | ---- |\n| `Addr`         | string | 1    | 设置空间的用户的钱包地址                              |      |\n| `Size`         | object | 1    | 设置空间的大小                                        |      |\n| `Size.Type`    | number | 1    | 设置空间的大小操作类型。 0: 不更新，1: 增加， 2: 撤销 |      |\n| `Size.Value`   | number | 1    | 增加/撤销 的空间大小（变化值）                        |      |\n| `Second`       | object | 1    | 设置空间的时间                                        |      |\n| `Second.Type`  | number | 1    | 设置空间的时间操作类型。 0: 不更新，1: 增加， 2: 撤销 |      |\n| `Second.Value` | number | 1    | 增加/撤销 的时间大小（变化值）                        |      |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"setuserspace\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Fee\": 1852206,\n        \"FeeFormat\": \"0.001852206\",\n        \"TransferType\": 2\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名                | 类型   | 描述 |\n| --------------------- | ------ | ---- |\n| `Action`              | string |      |\n| `Desc`                | string |      |\n| `Error`               | number |      |\n| `Result`              | string |      |\n| `Version`             | string |      |\n| `Result.Fee`          | number |      |\n| `Result.FeeFormat`    | number |      |\n| `Result.TransferType` | number |      |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40001 | 系统未知异常 |\n| 40002 | 参数验证失败 |"
							},
							"response": []
						},
						{
							"name": "revoke_user_space(Deprecated)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Addr\": \"AWpW2ukMkgkgRKtwWxC3viXEX8ijLio2Ng\",\n    \"Size\": 1024\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/client/userspace/revoke",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"client",
										"userspace",
										"revoke"
									]
								}
							},
							"response": []
						},
						{
							"name": "add_user_space(Deprecated)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Addr\": \"APKrfzQDWo6K9TkHNgVvxdjXLgTCVCeLbp\",\n    \"Size\": 102400,\n    \"Second\": 3600\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/client/userspace/add",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"client",
										"userspace",
										"add"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_user_space",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Addr\": \"AYPGqzu5cYD5MP6XAbn16aspZMZoJLDmc8\",\n    \"Second\": {\n        \"Value\":10240.1,\n        \"Type\": 1.1\n    },\n    \"Size\": {\n        \"Value\":  86400.1,\n        \"Type\": 1.1\n    },\n    \"Password\": \"a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8\"\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/client/userspace/set",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"client",
										"userspace",
										"set"
									]
								},
								"description": "> 接口说明\n\n设置(购买/撤销)空间\n\nPOST http://{{host}}/api/v1/dsp/client/userspace/set\n\n\n> 请求参数\n\n```json\n{\n    \"Addr\": \"ATAWAdWqKYL73xfRMD9k3xVtCVDJJSrcba\",\n    \"Size\": {\n        \"Type\": 1,\n        \"Value\": 102400\n    },\n    \"Second\": {\n        \"Type\": 1,\n        \"Value\": 3600\n    },\n    \"Password\": \"pwd\"\n}\n```\n\n| 参数名         | 类型   | 必需 | 描述                                                  | 示例 |\n| -------------- | ------ | ---- | ----------------------------------------------------- | ---- |\n| `Addr`         | string | 1    | 设置空间的用户的钱包地址                              |      |\n| `Size`         | object | 1    | 设置空间的大小                                        |      |\n| `Size.Type`    | number | 1    | 设置空间的大小操作类型。 0: 不更新，1: 增加， 2: 撤销 |      |\n| `Size.Value`   | number | 1    | 增加/撤销 的空间大小（变化值）                        |      |\n| `Second`       | object | 1    | 设置空间的时间                                        |      |\n| `Second.Type`  | number | 1    | 设置空间的时间操作类型。 0: 不更新，1: 增加， 2: 撤销 |      |\n| `Second.Value` | number | 1    | 增加/撤销 的时间大小（变化值）                        |      |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"setuserspace\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Tx\": \"dd02af0c1c0c3ef77e5b5846dfc67912c6399a7749728b4a03b74d7bc2c3a33d\"\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名    | 类型   | 描述 |\n| --------- | ------ | ---- |\n| `Action`  | string |      |\n| `Desc`    | string |      |\n| `Error`   | number |      |\n| `Result`  | string |      |\n| `Version` | string |      |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40002 | 参数验证失败 |\n| 50003 | 等待交易确认失败 |\n| 54014 | 空间调整时间没有保证剩余的时间大于1天 |\n| 59003 | 空间更改记录保存失败 |"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "crypto",
					"item": [
						{
							"name": "encrypt_file",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Path\": \"./test.txt\",\n    \"Password\": \"123456\"\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/encrypt",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"encrypt"
									]
								},
								"description": "> 接口说明\n\n对本地文件进行加密\n\nPOST http://{{host}}/api/v1/dsp/file/encrypt\n\n> 请求参数\n\n```json\n{\n    \"Path\": \"./test.txt\",\n    \"Password\": \"123456\"\n}\n```\n\n| 参数名     | 类型   | 必需 | 描述                 | 示例 |\n| ---------- | ------ | ---- | -------------------- | ---- |\n| `Path`     | string | 1    | 需要加密的文件的路径 |      |\n| `Password` | number | 1    | 密码                 |      |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"encryptfile\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": \"\",\n    \"Version\": \"1.0.0\"\n}\n```\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 55017 | 加密文件失败 |"
							},
							"response": []
						},
						{
							"name": "decrypt_file",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Path\": \"./test.txt\",\n    \"Password\": \"123456\"\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/v1/dsp/file/decrypt",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"dsp",
										"file",
										"decrypt"
									]
								},
								"description": "> 接口说明\n\n对本地文件进行解密\n\nPOST http://{{host}}/api/v1/dsp/file/decrypt\n\n> 请求参数\n\n```json\n{\n    \"Path\": \"./test.txt\",\n    \"Password\": \"123456\"\n}\n```\n\n| 参数名     | 类型   | 必需 | 描述               | 示例 |\n| ---------- | ------ | ---- | ------------------ | ---- |\n| `Path`     | string | 1    | 需要解密的文件路径 |      |\n| `Password` | number | 1    | 解密密码           |      |\n\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"decryptfile\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": \"\",\n    \"Version\": \"1.0.0\"\n}\n```\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 55018 | 解密文件失败 |\n| 55101 | 文件不存在 |\n| 55102 | 密码不正确 |"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "配置",
			"item": [
				{
					"name": "update_config",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n     \n        \"DownloadPath\": \"/Users/home/Desktop/onchain/save-test/node5\"\n        \n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/config",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"config"
							]
						},
						"description": "> 接口说明\n\n更新配置参数\n\n\nPOST http://{{host}}/api/v1/config\n\n> 请求参数\n\n```json\n{\n    \"DownloadPath\": \"~/Desktop\",\n    \"LogMaxSize\": 102400\n}\n```\n\n| 参数名         | 类型   | 必需 | 描述     | 示例 |\n| -------------- | ------ | ---- | -------- | ---- |\n| `DownloadPath` | string | 1    | 下载路径 |      |\n| `LogMaxSize`   | number | 1    | 日志存储最大限制 | 102400，单位kb |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getconfig\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"BaseDir\": \"/Users/home/Desktop/node4\",\n        \"DownloadPath\": \"/Users/home/Desktop/node4/Chain-0/Downloads/AY46Kes2ayy8c38hKBqictG9F9ar73mqhD\",\n        \"LogDirName\": \"./Log\",\n        \"LogLevel\": 0,\n        \"LogMaxSize\": 102400,\n        \"BlockConfirm\": 0,\n        \"SeedInterval\": 3600\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名                | 类型   | 描述                                     |\n| --------------------- | ------ | ---------------------------------------- |\n| `Action`              | string |                                          |\n| `Desc`                | string |                                          |\n| `Error`               | number |                                          |\n| `Result`              | string |                                          |\n| `Version`             | string |                                          |\n| `Result.BaseDir`      | string | 文档目录（当前版本重启生效）             |\n| `Result.DownloadPath` | string | 下载文件目录                             |\n| `Result.LogDirName`   | string | 日志文件昵称（当前版本重启生效）         |\n| `Result.LogLevel`     | number | 日志等级（当前版本重启生效）             |\n| `Result.LogMaxSize`   | number | 日志存储最大限制（当前版本重启生效）     |\n| `Result.BlockConfirm` | number | 区块确认数                               |\n| `Result.SeedInterval` | number | 提交文件信息时间间隔（当前版本重启生效） |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40001 | 系统内部错误 |"
					},
					"response": []
				},
				{
					"name": "get_config",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/config",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"config"
							]
						},
						"description": "> 接口说明\n\n获取配置\n\nGET http://{{host}}/api/v1/config\n\n\n>Body\n\n```json\n{\n    \"DownloadPath\": \"~/Desktop\"\n}\n```\n\n| 参数名         | 类型   | 必需 | 描述     | 示例 |\n| -------------- | ------ | ---- | -------- | ---- |\n| `DownloadPath` | string | 1    | 下载路径 |      |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getconfig\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"BaseDir\": \"/Users/home/Desktop/node4\",\n        \"DownloadPath\": \"/Users/home/Desktop/node4/Chain-0/Downloads/AY46Kes2ayy8c38hKBqictG9F9ar73mqhD\",\n        \"LogDirName\": \"./Log\",\n        \"LogLevel\": 0,\n        \"BlockConfirm\": 0,\n        \"SeedInterval\": 3600\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名                | 类型   | 描述                           |\n| --------------------- | ------ | ------------------------------ |\n| `Action`              | string |                                |\n| `Desc`                | string |                                |\n| `Error`               | number |                                |\n| `Result`              | string |                                |\n| `Version`             | string |                                |\n| `Result.BaseDir`      | string | 文档目录                       |\n| `Result.DownloadPath` | string | 下载目录                       |\n| `Result.LogDirName`   | string | 日志文件夹名称                 |\n| `Result.LogLevel`     | number | 日志等级                       |\n| `Result.BlockConfirm` | number | 等待区块确认数                 |\n| `Result.SeedInterval` | number | 提交文件信息时间间隔（单位秒） |"
					},
					"response": []
				}
			]
		},
		{
			"name": "节点管理",
			"item": [
				{
					"name": "reconnect_peer",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Peers\": [\n        \"tcp://40.73.102.177:10338\"\n    ]\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/network/channel/reconnect",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"network",
								"channel",
								"reconnect"
							]
						},
						"description": "> 接口说明\n\n重连dns节点\n\nPOST http://{{host}}/api/v1/network/channel/reconnect\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"channelreconnectpeers\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Peers\": [\n            {\n                \"HostAddr\": \"tcp://40.73.102.177:10338\",\n                \"Code\": 0,\n                \"Error\": \"\"\n            }\n        ]\n    },\n    \"Version\": \"1.0.0\"\n}\n```"
					},
					"response": []
				},
				{
					"name": "get_all_dns",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/dns",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"dns"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_nodes_info",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/dsp/nodes/info",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"dsp",
								"nodes",
								"info"
							]
						},
						"description": "> 接口说明\n\n获取存储节点信息\n\nGET http://{{host}}/api/v1/dsp/nodes/info\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getnodesinfo\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Count\": 3\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名         | 类型   | 描述                   |\n| -------------- | ------ | ---------------------- |\n| `Action`       | string |                        |\n| `Desc`         | string |                        |\n| `Error`        | number |                        |\n| `Result`       | object |                        |\n| `Result.Count` | number | 全网注册的存储节点数目 |\n| `Version`      | string |                        |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40001 | 系统内部错误 |"
					},
					"response": []
				}
			]
		},
		{
			"name": "通道管理",
			"item": [
				{
					"name": "channel_syncing",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/channel/syncing",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"channel",
								"syncing"
							]
						},
						"description": "> 接口说明\n\n\n判断通道是否正在同步中\n\nGET http://{{host}}/api/v1/channel/syncing\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"channelsyncing\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Syncing\": false\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名           | 类型    | 描述               |\n| ---------------- | ------- | ------------------ |\n| `Action`         | string  |                    |\n| `Desc`           | string  |                    |\n| `Error`          | number  |                    |\n| `Result`         | object  |                    |\n| `Result.Syncing` | boolean | 是否在处理同步区块 |\n| `Version`        | string  |                    |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40001 | 系统内部错误 |\n| 40003 | DSP没有初始化 |"
					},
					"response": []
				},
				{
					"name": "open_channel(等待channel同步完成才可调用）",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Partner\": \"AN8rkVqfo3dNAzJY3Dzh3iikzjhEu3vwCJ\",\n    \"Password\": \"a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8\",\n    \"Amount\": \"20.0\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/channel/open",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"channel",
								"open"
							]
						},
						"description": "> 接口说明\n\n等待channel同步完成才可调用\n\nPOST  http://{{host}}/api/v1/channel/open\n\n> 请求参数\n\n```json\n{\n    \"Partner\": \"AXmXwiHPQESUKyxRbzMXhFjhb3wRn6iDkF\",\n    \"Password\": \"pwd\",\n    \"Amount\": \"2.0\"\n}\n```\n\n| 参数名     | 类型   | 必需 | 描述               | 示例 |\n| ---------- | ------ | ---- | ------------------ | ---- |\n| `Partner`  | string | 1    | 对方通道的钱包地址 |      |\n| `Password` | string | 1    | 自己钱包的密码     |      |\n| `Amount`   | string | 1    | 充值的金额         |      |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40001 | 系统内部错误 |\n| 40006 | 余额不足 |\n| 40010 | 钱包格式不正确 |\n| 56001 | 通道开启失败 |\n| 56011 | 通道已存在 |\n| 56015 | 通道正在同步中 |"
					},
					"response": []
				},
				{
					"name": "channel_init_progress",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/channel/init/progress",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"channel",
								"init",
								"progress"
							]
						},
						"description": "> 接口说明\n\t\n查看状态通道的初始化进度\n\nGET http://{{host}}/api/v1/channel/init/progress\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"channelinitprogress\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Progress\": 0.24643423,\n        \"Start\": 479608,\n        \"End\": 480870,\n        \"Now\": 479919\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名            | 类型   | 描述               |\n| ----------------- | ------ | ------------------ |\n| `Action`          | string |                    |\n| `Desc`            | string |                    |\n| `Error`           | number |                    |\n| `Result`          | object |                    |\n| `Result.Progress` | number | 加载的进度         |\n| `Result.Start`    | number | 开始同步的区块高度 |\n| `Result.End`      | number | 结束同步的区块高度 |\n| `Result.Now`      | number | 当前区块高度       |\n| `Version`         | string |                    |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40011 | 1. channel 一开始初始化的时候，如果还没有初始化完成。调用这个接口会返回这个错误。2. 第二种情况是， 使用了一个之前开过通道的钱包，但是Chain-0的channel数据库被删除过，数据库无法恢复， channel服务启动失败 |\n| 50000 | 主链内部错误 |"
					},
					"response": []
				},
				{
					"name": "close_channel(等待channel同步完成才可调用）",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Partner\": \"AXmXwiHPQESUKyxRbzMXhFjhb3wRn6iDkF\",\n    \"Password\": \"pwd\"\n}"
						},
						"url": {
							"raw": "/{{host}}/api/v1/channel/close",
							"path": [
								"{{host}}",
								"api",
								"v1",
								"channel",
								"close"
							]
						},
						"description": "> 接口说明\n\n等待channel同步完成才可调用\n\n\nPOST  http://{{host}}/api/v1/channel/close\n\n\n> 请求参数\n\n```json\n{\n    \"Partner\": \"AXmXwiHPQESUKyxRbzMXhFjhb3wRn6iDkF\",\n    \"Password\": \"pwd\"\n}\n```\n\n| 参数名     | 类型   | 必需 | 描述               | 示例 |\n| ---------- | ------ | ---- | ------------------ | ---- |\n| `Partner`  | string | 1    | 对方通道的钱包地址 |      |\n| `Password` | string | 1    | 自己钱包的密码     |      |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"closechannel\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": \"\",\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40003 | DSP实例没有初始化 |\n| 55068| 有下载任务，无法关闭通道|\n| 56002 | 关闭通道失败 |\n| 56015 | 通道正在同步中 |"
					},
					"response": []
				},
				{
					"name": "deposit_channel(等待channel同步完成才可调用）",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Partner\": \"AXmXwiHPQESUKyxRbzMXhFjhb3wRn6iDkF\",\n    \"Amount\": \"2\",\n    \"Password\": \"pwd\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/channel/deposit",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"channel",
								"deposit"
							]
						},
						"description": "> 接口说明\n\n\n等待channel同步完成才可调用\n\n通道充值\n\nPOST http://{{host}}/api/v1/channel/deposit\n\n> 请求参数\n\n```json\n{\n    \"Partner\": \"AXmXwiHPQESUKyxRbzMXhFjhb3wRn6iDkF\",\n    \"Amount\": \"2\",\n    \"Password\": \"pwd\"\n}\n```\n\n| 参数名     | 类型   | 必需 | 描述           | 示例 |\n| ---------- | ------ | ---- | -------------- | ---- |\n| `Partner`  | string | 1    | 对方钱包的地址 |      |\n| `Amount`   | number | 1    | 充值的金额     |      |\n| `Password` | string | 1    | 钱包密码       |      |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"depositchannel\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": \"\",\n    \"Version\": \"1.0.0\"\n}\n```\n\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 56004 | 通道充值失败 |\n| 56015 | 通道正在同步中 |"
					},
					"response": []
				},
				{
					"name": "switch_channel",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Partner\": \"AdvEgrymzwo3TWwr24Cx5ddX3GvcMJ1XAp\",\n    \"Password\": \"pwd\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/channel/switch",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"channel",
								"switch"
							]
						},
						"description": "> 接口说明\n\n切换连接的DNS通道\n\nPOST http://{{host}}/api/v1/channel/switch\n\n> 请求参数\n\n```json\n{\n    \"Partner\": \"AdvEgrymzwo3TWwr24Cx5ddX3GvcMJ1XAp\",\n    \"Password\": \"pwd\"\n}\n```\n\n| 参数名     | 类型   | 必需 | 描述 | 示例                               |\n| ---------- | ------ | ---- | ---- | ---------------------------------- |\n| `Partner`  | string | 1    | 必须 | AdvEgrymzwo3TWwr24Cx5ddX3GvcMJ1XAp |\n| `Password` | string | 1    | 必须 | pwd                                |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"switchchannel\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": \"\",\n    \"Version\": \"1.0.0\"\n}\n```\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 55030 | 切换成功但是注册Endpoint失败 |\n| 56011 | 通道不存在 |\n| 56012 | 没有连接的DNS |\n| 56015 | 通道正在同步中 |"
					},
					"response": []
				},
				{
					"name": "withdraw_channel(等待channel同步完成才可调用）",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Partner\": \"AXmXwiHPQESUKyxRbzMXhFjhb3wRn6iDkF\",\n    \"Amount\": \"1\",\n    \"Password\": \"pwd\"\n}"
						},
						"url": {
							"raw": "/{{host}}/api/v1/channel/withdraw",
							"path": [
								"{{host}}",
								"api",
								"v1",
								"channel",
								"withdraw"
							]
						},
						"description": "> 接口说明\n\n等待channel同步完成才可调用\n\n通道提现\n\nPOST  http://{{host}}/api/v1/channel/withdraw\n\n> 请求参数\n\n```json\n{\n    \"Partner\": \"AXmXwiHPQESUKyxRbzMXhFjhb3wRn6iDkF\",\n    \"Amount\": \"1\",\n    \"Password\": \"pwd\"\n}\n```\n\n| 参数名     | 类型   | 必需 | 描述           | 示例 |\n| ---------- | ------ | ---- | -------------- | ---- |\n| `Partner`  | string | 1    | 对方钱包的地址 |      |\n| `Amount`   | number | 1    | 提现的金额     |      |\n| `Password` | string | 1    | 钱包密码       |      |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"withdrawchannel\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": \"\",\n    \"Version\": \"1.0.0\"\n}\n```\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40006 | 余额不足 |\n| 40010 | 钱包格式不正确 |\n| 56000 | 通道内部错误 |\n| 56001 | 通道开启失败 |\n| 56005 | 通道提现失败 |\n| 56006 | 提现金额溢出 |\n| 56014 | 提现金额非法 |\n| 56015 | 通道正在同步中 |"
					},
					"response": []
				},
				{
					"name": "current_channel",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/channel/current",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"channel",
								"current"
							]
						},
						"description": "> 接口说明\n\n获取当前选择的DNS通道\n\nGET http://{{host}}/api/v1/channel/current\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"currentchannel\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"ChannelId\": 333,\n        \"Balance\": 10000000000000,\n        \"BalanceFormat\": \"10000\",\n        \"Address\": \"AdvEgrymzwo3TWwr24Cx5ddX3GvcMJ1XAp\",\n        \"HostAddr\": \"\",\n        \"TokenAddr\": \"AFmseVrdL9f9oyCzZefL9tG6UbvhUMqNMV\",\n        \"Participant1State\": 1,\n        \"ParticiPant2State\": 1,\n        \"IsDNS\": true,\n        \"Connected\": true\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 56007 | 获取所有通道失败 |\n| 56012 | 没有连接的DNS |\n| 56015 | 通道正在同步中 |"
					},
					"response": []
				},
				{
					"name": "getallchannels(等待channel同步完成才可调用）",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/channel",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"channel"
							]
						},
						"description": "> 接口说明\n\n获取所有通道详情\n\nGET  http://{{host}}/api/v1/channel\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getallchannels\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Balance\": 100471310368,\n        \"BalanceFormat\": \"100.471310368\",\n        \"Channels\": [\n            {\n                \"ChannelId\": 149,\n                \"Balance\": 99471310368,\n                \"BalanceFormat\": \"99.471310368\",\n                \"Address\": \"AUtcTFw1mMB1R2Lvf28pEmm9xemUDtBHun\",\n                \"HostAddr\": \"tcp://168.63.253.231:10338\",\n                \"TokenAddr\": \"AFmseVrdL9f9oyCzZefL9tG6UbvhUMqNMV\",\n                \"Participant1State\": 1,\n                \"ParticiPant2State\": 1,\n                \"IsDNS\": true,\n                \"IsOnline\": true,\n                \"Selected\": true,\n                \"CreatedAt\": 1570521786\n            },\n            {\n                \"ChannelId\": 156,\n                \"Balance\": 1000000000,\n                \"BalanceFormat\": \"1\",\n                \"Address\": \"AY46Kes2ayy8c38hKBqictG9F9ar73mqhD\",\n                \"HostAddr\": \"tcp://40.73.100.114:32929\",\n                \"TokenAddr\": \"AFmseVrdL9f9oyCzZefL9tG6UbvhUMqNMV\",\n                \"Participant1State\": 1,\n                \"ParticiPant2State\": 1,\n                \"IsDNS\": false,\n                \"IsOnline\": false,\n                \"Selected\": false,\n                \"CreatedAt\": 1570522036\n            }\n        ]\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名                              | 类型    | 描述                             |\n| ----------------------------------- | ------- | -------------------------------- |\n| `Action`                            | string  |                                  |\n| `Desc`                              | string  |                                  |\n| `Error`                             | number  |                                  |\n| `Result`                            | array   |                                  |\n| `Result.Balance`                    | number  | 通道总余额                       |\n| `Result.BalanceFormat`              | number  | 通道总余额（除以精度之后的格式） |\n| `Result.Channels`                   | array   | 所有通道                         |\n| `Result.Channels.ChannelId`         | number  | 通道ID                           |\n| `Result.Channels.Balance`           | number  | 通道余额                         |\n| `Result.Channels.BalanceFormat`     | number  | 通道余额（除以精度之后的格式）   |\n| `Result.Channels.Address`           | string  | 对方地址                         |\n| `Result.Channels.HostAddr`          | string  | 对方IP信息                       |\n| `Result.Channels.TokenAddr`         | string  | 通道抵押的资产的地址             |\n| `Result.Channels.Participant1State` | number  | 状态。 0: 关闭中， 1: 正常       |\n| `Result.Channels.ParticiPant2State` | number  | 状态。 0: 关闭中， 1: 正常       |\n| `Result.Channels.IsDNS`             | boolean | 是否是DNS                        |\n| `Result.Channels.IsOnline`          | boolean | 和对方的连接是否在线             |\n| `Result.Channels.Selected`          | boolean | 是否选择了这个DNS通道            |\n| `Result.Channels.CreatedAt`         | number  | 创建时间(单位秒)                 |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40001 | 系统内部错误 |\n| 40003 | DSP没有初始化 |\n| 40007 | 账号没有登录 |"
					},
					"response": []
				}
			]
		},
		{
			"name": "其他",
			"item": [
				{
					"name": "chain_id_list",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/chainid/list",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"chainid",
								"list"
							]
						},
						"description": "> 接口说明\n\n获取所有可用的链ID\n\nGET http://{{host}}/api/v1/chainid/list\n\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getchainidlist\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Ids\": [\n            \"0\",\n            \"1\",\n            \"12345\",\n            \"12346\"\n        ],\n        \"CurrentId\": \"1\"\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名             | 类型   | 描述 |\n| ------------------ | ------ | ---- |\n| `Action`           | string |      |\n| `Desc`             | string |      |\n| `Error`            | number |      |\n| `Result`           | object |      |\n| `Result.Ids`       | array  |      |\n| `Version`          | string |      |\n| `Result.CurrentId` | number |      |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40001 | 系统内部错误 |"
					},
					"response": []
				},
				{
					"name": "get_block_height_by_txhash",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "/{{host}}/api/v1/block/height/txhash/7192c009ed665d231d52a0942b3199d695f45b97befcc8005b6d242cdffd888c",
							"path": [
								"{{host}}",
								"api",
								"v1",
								"block",
								"height",
								"txhash",
								"7192c009ed665d231d52a0942b3199d695f45b97befcc8005b6d242cdffd888c"
							]
						},
						"description": "> 接口说明\n\n根据交易Hash获取区块高度\n\nGET  http://{{host}}/api/v1/block/height/txhash/:txid\n\n\n> 请求参数\n\n| 参数名       | 类型   | 必需 | 描述          | 示例 |\n| ------------ | ------ | ---- | ------------- | ---- |\n| `txid` | string | 1    | 交易Hash |      |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getblockheight\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": 1275,\n    \"Version\": \"1.0.0\"\n}\n```\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40002 | 参数验证不正确 |\n| 50000 | 主链内部错误 |"
					},
					"response": []
				},
				{
					"name": "version",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/version",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"version"
							]
						},
						"description": "> 详细说明\n\n获取当前版本号\n\nGET http://{{host}}/api/v1/version\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getversion\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": \"0f22\",\n    \"Version\": \"1.0.0\"\n}\n```\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 50000 | 主链内部错误 |"
					},
					"response": []
				},
				{
					"name": "network_state",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/network/state",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"network",
								"state"
							]
						},
						"description": "> 接口说明\n\n获取当前网络节点状态\n\nGET http://{{host}}/api/v1/network/state\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"networkstate\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Chain\": {\n            \"HostAddr\": \"\",\n            \"State\": 1,\n            \"UpdatedAt\": 1567413639\n        },\n        \"DNS\": {\n            \"HostAddr\": \"tcp://40.73.102.177:10338\",\n            \"State\": 1,\n            \"UpdatedAt\": 1567413638\n        },\n        \"DspProxy\": {\n            \"HostAddr\": \"tcp://40.73.103.72:6007\",\n            \"State\": 1,\n            \"UpdatedAt\": 1567413636\n        },\n        \"ChannelProxy\": {\n            \"HostAddr\": \"tcp://40.73.103.72:6007\",\n            \"State\": 1,\n            \"UpdatedAt\": 1567413636\n        }\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名                          | 类型   | 描述                                              |\n| ------------------------------- | ------ | ------------------------------------------------- |\n| `Action`                        | string |                                                   |\n| `Desc`                          | string |                                                   |\n| `Version`                       | string |                                                   |\n| `Result.Chain`                  | object |                                                   |\n| `Result.Chain.HostAddr`         | string | IP信息                                            |\n| `Result.Chain.State`            | number | 主链连接状态， 0: 连接异常，1: 连接正常, 2:服务没开启        |\n| `Result.Chain.UpdatedAt`        | number | 最后一次通信时间（单位秒)                         |\n| `Result.DNS`                    | object |                                                   |\n| `Result.DNS.HostAddr`           | string | IP信息                                            |\n| `Result.DNS.State`              | number | DNS连接状态，  0: 连接异常，1: 连接正常, 2:服务没开启            |\n| `Result.DNS.UpdatedAt`          | number | 最后一次通信时间（单位秒)                         |\n| `Result.DspProxy`               | object |                                                   |\n| `Result.DspProxy.HostAddr`      | string | IP信息                                            |\n| `Result.DspProxy.State`         | number | Dsp Proxy连接状态，  0: 连接异常，1: 连接正常, 2:服务没开启      |\n| `Result.DspProxy.UpdatedAt`     | number | 最后一次通信时间（单位秒)                         |\n| `Result.ChannelProxy`           | object |                                                   |\n| `Result.ChannelProxy.HostAddr`  | string | IP信息                                            |\n| `Result.ChannelProxy.State`     | number | Channel Proxy连接状态， 0: 连接异常，1: 连接正常, 2:服务没开启  |\n| `Result.ChannelProxy.UpdatedAt` | number | 最后一次通信时间（单位秒)                         |"
					},
					"response": []
				},
				{
					"name": "system_state",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/system/state",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"system",
								"state"
							]
						},
						"description": "> 接口说明\n\n获取当前网络节点状态\n\nGET http://{{host}}/api/v1/network/state\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"networkstate\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Chain\": {\n            \"HostAddr\": \"\",\n            \"State\": 1,\n            \"UpdatedAt\": 1567413639\n        },\n        \"DNS\": {\n            \"HostAddr\": \"tcp://40.73.102.177:10338\",\n            \"State\": 1,\n            \"UpdatedAt\": 1567413638\n        },\n        \"DspProxy\": {\n            \"HostAddr\": \"tcp://40.73.103.72:6007\",\n            \"State\": 1,\n            \"UpdatedAt\": 1567413636\n        },\n        \"ChannelProxy\": {\n            \"HostAddr\": \"tcp://40.73.103.72:6007\",\n            \"State\": 1,\n            \"UpdatedAt\": 1567413636\n        }\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名                          | 类型   | 描述                                              |\n| ------------------------------- | ------ | ------------------------------------------------- |\n| `Action`                        | string |                                                   |\n| `Desc`                          | string |                                                   |\n| `Version`                       | string |                                                   |\n| `Result.Chain`                  | object |                                                   |\n| `Result.Chain.HostAddr`         | string | IP信息                                            |\n| `Result.Chain.State`            | number | 主链连接状态， 0: 连接异常，1: 连接正常, 2:服务没开启        |\n| `Result.Chain.UpdatedAt`        | number | 最后一次通信时间（单位秒)                         |\n| `Result.DNS`                    | object |                                                   |\n| `Result.DNS.HostAddr`           | string | IP信息                                            |\n| `Result.DNS.State`              | number | DNS连接状态，  0: 连接异常，1: 连接正常, 2:服务没开启            |\n| `Result.DNS.UpdatedAt`          | number | 最后一次通信时间（单位秒)                         |\n| `Result.DspProxy`               | object |                                                   |\n| `Result.DspProxy.HostAddr`      | string | IP信息                                            |\n| `Result.DspProxy.State`         | number | Dsp Proxy连接状态，  0: 连接异常，1: 连接正常, 2:服务没开启      |\n| `Result.DspProxy.UpdatedAt`     | number | 最后一次通信时间（单位秒)                         |\n| `Result.ChannelProxy`           | object |                                                   |\n| `Result.ChannelProxy.HostAddr`  | string | IP信息                                            |\n| `Result.ChannelProxy.State`     | number | Channel Proxy连接状态， 0: 连接异常，1: 连接正常, 2:服务没开启  |\n| `Result.ChannelProxy.UpdatedAt` | number | 最后一次通信时间（单位秒)                         |"
					},
					"response": []
				},
				{
					"name": "current_height",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/block/height",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"block",
								"height"
							]
						},
						"description": "> 详细说明\n\n获取当前块高\n\nGET  http://{{host}}/api/v1/block/height\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getblockheight\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": 1275,\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 50000 | 主链内部错误 |"
					},
					"response": []
				},
				{
					"name": "chain_id",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/chainid",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"chainid"
							]
						},
						"description": "> 接口说明\n\n获取当前的ChainId\n\nGET http://{{host}}/api/v1/chainid\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getchainid\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"ChainId\": \"1\"\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名             | 类型   | 描述 |\n| ------------------ | ------ | ---- |\n| `Action`           | string |      |\n| `Desc`             | string |      |\n| `Error`            | number |      |\n| `Result`           | object |      |\n| `Result.ChainId`       | string  |  当前的ChainId     |\n| `Version`          | string |      |"
					},
					"response": []
				},
				{
					"name": "switch_chain_id",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ChainId\": \"0\",\n    \"Config\": \"config-0.json\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/chainid/switch",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"chainid",
								"switch"
							]
						},
						"description": "> 接口说明\n\n切换不同的网络\n\nPOST http://{{host}}/api/v1/chainid/switch\n\n\n> 请求参数\n\n```json\n{\n    \"ChainId\": \"1\",\n    \"Config\": \"config-1.json\"\n}\n```\n\n| 参数名    | 类型   | 必需 | 描述                                                         | 示例 |\n| --------- | ------ | ---- | ------------------------------------------------------------ | ---- |\n| `ChainId` | number | 1    | chain id                                                     |      |\n| `Config`  | string | 0    | 配置文件名字(如果不传，默认使用名称为 config-${id}.json 配置文件） |      |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"switchchainid\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": \"\",\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名    | 类型   | 描述 |\n| --------- | ------ | ---- |\n| `Action`  | string |      |\n| `Desc`    | string |      |\n| `Error`   | number |      |\n| `Result`  | object |      |\n| `Version` | string |      |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40001 | 系统内部错误 |\n| 56015 | 通道正在同步中 |"
					},
					"response": []
				},
				{
					"name": "debug_getroutine_num",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/goroutine",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"goroutine"
							]
						}
					},
					"response": []
				},
				{
					"name": "module_state",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/module/state",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"module",
								"state"
							]
						},
						"description": "> 接口说明\n\n获取当前各个模块的状态\n\nGET http://{{host}}/api/v1/module/state\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getmodulestate\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": [\n        {\n            \"Id\": 0,\n            \"Name\": \"dsp\",\n            \"State\": 3\n        },\n        {\n            \"Id\": 1,\n            \"Name\": \"chain\",\n            \"State\": 3\n        },\n        {\n            \"Id\": 2,\n            \"Name\": \"max\",\n            \"State\": 3\n        },\n        {\n            \"Id\": 3,\n            \"Name\": \"scan\",\n            \"State\": 3\n        },\n        {\n            \"Id\": 4,\n            \"Name\": \"pylons\",\n            \"State\": 3\n        }\n    ],\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名                          | 类型   | 描述                                              |\n| ------------------------------- | ------ | ------------------------------------------------- |\n| `Action`                        | string |                                                   |\n| `Desc`                          | string |                                                   |\n| `Version`                       | string |                                                   |\n| `Result.Id`               \t  | number | 各模块ID。0: dsp, 1: chain， 2: 存储模块, 3: DNS 模块, 4: 通道模块|\n| `Result.Namer`        \t\t  | string | 名称                                            |\n| `Result.State`            \t  | number | 0: 无，1: 模块正在开启. 2: 模块已开启但是未运行. 3: 模块正在运行 4. 模块正在停止 5. 模块已停止 6. 模块异常,无法加载 |"
					},
					"response": []
				}
			]
		},
		{
			"name": "用户管理",
			"item": [
				{
					"name": "current_account",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/account",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"account"
							]
						},
						"description": "#### current_account\n\n```\nGET http://{{host}}/api/v1/account\n```\n\n\n\n> 详细说明\n\n<p><strong>获取当前账号信息</strong></p>\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getcurrentaccount\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"PrivateKey\": \"KwwUFLjCVhPQSiz87WfmtiZ81DvzyfjW9yK1w7w64w2WfEaWsAYm\",\n        \"PublicKey\": \"0229eee70929aaf2e2c103f4cc80db7c6c5a4454f05e288699a00b54a4c6c2fe1a\",\n        \"Address\": \"AK5FeK3uUt59miEFZjTc35Z4jZVPXCDRvQ\",\n        \"SigScheme\": 1,\n        \"Label\": \"\",\n        \"Wallet\": \"\"\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名              | 类型   | 描述 |\n| ------------------- | ------ | ---- |\n| `Action`            | string |      |\n| `Desc`              | string |      |\n| `Error`             | number |      |\n| `Result`            | object |      |\n| `Result.PrivateKey` | string |      |\n| `Result.PublicKey`  | string |      |\n| `Result.Address`    | string |      |\n| `Result.SigScheme`  | number |      |\n| `Result.Label`      | string |      |\n| `Result.Wallet`     | string |      |\n| `Version`           | string |      |\n\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 50012 | 用户未登录 |\n| 50013 | 钱包不存在 |"
					},
					"response": []
				},
				{
					"name": "import_account_with_privatekey",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"PrivateKey\": \"L132RbU6oGMWHYJrEFQk8DpVdfksFz8B1mGVHMSEJeiMBiGD4ijk\",\n    \"Password\": \"123\",\n    \"Label\": \"123\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/account/import/privatekey",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"account",
								"import",
								"privatekey"
							]
						},
						"description": "> 接口说明\n\n通过私钥导入账号，同时启动实例，接入存储网络\n\n```\nPOST http://{{host}}/api/v1/account/import/privatekey\n```\n\n> 请求参数\n\n```json\n{\n    \"PrivateKey\": \"KxdYvp6GRpcz4GSPoPcAXmpyTuhisJQCepZgU4gTPfePhPR5CMCs\",\n    \"Password\": \"pwd\",\n    \"Label\": \"123\"\n}\n```\n\n| 参数名       | 类型   | 必需 | 描述          | 示例 |\n| ------------ | ------ | ---- | ------------- | ---- |\n| `PrivateKey` | string | 1    | 私钥(WIF格式) |      |\n| `Password`   | string | 1    | 密码          |      |\n| `Label`      | number | 1    | 钱包Label     |      |\n\n\n> 返回结果\n\n```json\n{\n    \"Action\": \"importaccountwithprivatekey\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"PrivateKey\": \"KwwUFLjCVhPQSiz87WfmtiZ81DvzyfjW9yK1w7w64w2WfEaWsAYm\",\n        \"PublicKey\": \"0229eee70929aaf2e2c103f4cc80db7c6c5a4454f05e288699a00b54a4c6c2fe1a\",\n        \"Address\": \"AK5FeK3uUt59miEFZjTc35Z4jZVPXCDRvQ\",\n        \"SigScheme\": 1,\n        \"Label\": \"\",\n        \"Wallet\": \"\"\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名              | 类型   | 描述 |\n| ------------------- | ------ | ---- |\n| `Action`            | string |      |\n| `Desc`              | string |      |\n| `Error`             | number |      |\n| `Result`            | object |      |\n| `Result.PrivateKey` | string |      |\n| `Result.PublicKey`  | string |      |\n| `Result.Address`    | string |      |\n| `Result.SigScheme`  | number |      |\n| `Result.Label`      | string |      |\n| `Result.Wallet`     | string |      |\n| `Version`           | string |      |\n\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40001 | 未知异常 |\n| 40002 | 参数验证失败 |\n| 50015 | 钱包密码不正确 |\n| 55000 | DSP初始化失败 |"
					},
					"response": []
				},
				{
					"name": "logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/account/logout",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"account",
								"logout"
							]
						},
						"description": "> 接口说明\n\nPOST http://{{host}}/api/v1/account/logout\n\n注意：\n需要等待 pylons模块状态大于等于3的时候才可以退出登录。\n\n> 详细说明\n\n<p><strong>注销当前账号</strong></p>\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"logout\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": \"\",\n    \"Version\": \"1.0.0\"\n}\n```\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40001 | 未知异常 |\n| 55002 | DSP停止失败 |\n| 56015 | 通道正在同步中，无法退出 |"
					},
					"response": []
				},
				{
					"name": "export_privatekey",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/account/export/privatekey/pwd",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"account",
								"export",
								"privatekey",
								"pwd"
							]
						},
						"description": "> 接口说明\nGET http://{{host}}/api/v1/account/export/privatekey/pwdhash\n\n> 详细说明\n\n导出私钥(WIF)格式\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"exportwifprivatekey\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"PrivateKey\": \"KxdYvp6GRpcz4GSPoPcAXmpyTuhisJQCepZgU4gTPfePhPR5CMCs\"\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名              | 类型   | 描述          |\n| ------------------- | ------ | ------------- |\n| `Action`            | string |               |\n| `Desc`              | string |               |\n| `Error`             | number |               |\n| `Result`            | object |               |\n| `Result.PrivateKey` | string | 私钥的WIF格式 |\n| `Version`           | string |               |\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40001 | 未知异常 |"
					},
					"response": []
				},
				{
					"name": "import_account_with_walletfile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Wallet\": \"{\\\"name\\\":\\\"MyWallet\\\",\\\"version\\\":\\\"1.1\\\",\\\"scrypt\\\":{\\\"p\\\":8,\\\"n\\\":16384,\\\"r\\\":8,\\\"dkLen\\\":64},\\\"accounts\\\":[{\\\"address\\\":\\\"AHjjdbVLhfTyiNFEq2X8mFnnirZY1yK8Rq\\\",\\\"enc-alg\\\":\\\"aes-256-gcm\\\",\\\"key\\\":\\\"gxQmlkEeNYtztEH3oTdjOkDsjpH13cbhHLgdMfjBkuwv0qhKSciQi//FESPmYxKN\\\",\\\"algorithm\\\":\\\"ECDSA\\\",\\\"salt\\\":\\\"A/7nwFwsLK5gLmlXW/V5sg==\\\",\\\"parameters\\\":{\\\"curve\\\":\\\"P-256\\\"},\\\"label\\\":\\\"pwd\\\",\\\"publicKey\\\":\\\"0392f8ff7ace886c5bcd76193692c32af16db6df292ee3d893f71645a354a796eb\\\",\\\"signatureScheme\\\":\\\"SHA256withECDSA\\\",\\\"isDefault\\\":true,\\\"lock\\\":false}]}\",\n    \"Password\": \"pwd\",\n    \"WalletPath\": \"./wallets/wal.dat\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/account/import/walletfile",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"account",
								"import",
								"walletfile"
							]
						},
						"description": "> 接口说明\n\nPOST http://{{host}}/api/v1/account/import/walletfile\n通过钱包文件导入，同时启动实例，接入存储网络\n\n> 参数说明\n\n| 参数名     | 类型   | 必需 | 描述         | 示例 |\n| ---------- | ------ | ---- | ------------ | ---- |\n| `Wallet`   | string | 1    | 钱包文件内容 |      |\n| `Password` | string | 1    | 密码         |      |\n| `WalletPath` | string | 0    | 钱包文件所在绝对路径, 如果为空，默认使用配置文件的路径作为钱包文件的路径。反之则用这个路径作为钱包文件的路径         |      |\n\n> 返回结果\n\n```json\n{\n    \"Action\": \"importaccountwithwallet\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"PrivateKey\": \"KwwUFLjCVhPQSiz87WfmtiZ81DvzyfjW9yK1w7w64w2WfEaWsAYm\",\n        \"PublicKey\": \"0229eee70929aaf2e2c103f4cc80db7c6c5a4454f05e288699a00b54a4c6c2fe1a\",\n        \"Address\": \"AK5FeK3uUt59miEFZjTc35Z4jZVPXCDRvQ\",\n        \"SigScheme\": 1,\n        \"Label\": \"\",\n        \"Wallet\": \"\"\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名              | 类型   | 描述 |\n| ------------------- | ------ | ---- |\n| `Action`            | string |      |\n| `Desc`              | string |      |\n| `Error`             | number |      |\n| `Result`            | object |      |\n| `Result.PrivateKey` | string |      |\n| `Result.PublicKey`  | string |      |\n| `Result.Address`    | string |      |\n| `Result.SigScheme`  | number |      |\n| `Result.Label`      | string |      |\n| `Result.Wallet`     | string |      |\n| `Version`           | string |      |\n\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40001 | 未知异常 |\n| 40002 | 参数验证失败 |\n| 50014 | 钱包文件损坏 |\n| 50015 | 钱包密码不正确 |\n| 55000 | DSP初始化失败 |"
					},
					"response": []
				},
				{
					"name": "new_account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Password\": \"pwd\",\n    \"Label\": \"\",\n    \"KeyType\": \"ecdsa\",\n    \"Curve\": \"P-256\",\n    \"Scheme\": \"SHA256withECDSA\",\n    \"CreateOnly\": true\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/account",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"account"
							]
						},
						"description": "> 接口说明\n\nPOST http://{{host}}/api/v1/account\n\n创建账号\n\n> 参数\n\n| 参数名       | 类型    | 必需 | 描述                                        | 示例 |\n| ------------ | ------- | ---- | ------------------------------------------- | ---- |\n| `Password`   | string  | 1    |    钱包密码                                        |      |\n| `Label`      | string  | 1    |    用户名                                         |      |\n| `KeyType`    | string  | 1    |    创建账号参数                                   |      |\n| `Curve`      | string  | 1    |    创建账号参数                                   |      |\n| `Scheme`     | string  | 1    |    创建账号参数                                   |      |\n| `CreateOnly` | boolean | 0    | 仅创建账号（如果为true,则只是离线创建钱包） |      |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getcurrentaccount\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"PrivateKey\": \"KwwUFLjCVhPQSiz87WfmtiZ81DvzyfjW9yK1w7w64w2WfEaWsAYm\",\n        \"PublicKey\": \"0229eee70929aaf2e2c103f4cc80db7c6c5a4454f05e288699a00b54a4c6c2fe1a\",\n        \"Address\": \"AK5FeK3uUt59miEFZjTc35Z4jZVPXCDRvQ\",\n        \"SigScheme\": 1,\n        \"Label\": \"\",\n        \"Wallet\": \"\"\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名              | 类型   | 描述 |\n| ------------------- | ------ | ---- |\n| `Action`            | string |      |\n| `Desc`              | string |      |\n| `Error`             | number |      |\n| `Result`            | object |      |\n| `Result.PrivateKey` | string |      |\n| `Result.PublicKey`  | string |      |\n| `Result.Address`    | string |      |\n| `Result.SigScheme`  | number |      |\n| `Result.Label`      | string |      |\n| `Result.Wallet`     | string |      |\n| `Version`           | string |      |\n\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 50012 | 用户未登录 |\n| 50013 | 钱包不存在 |\n| 50016 | 创建账号失败 |\n| 50017 | 导出钱包失败 |\n| 55000 | DSP初始化失败 |"
					},
					"response": []
				},
				{
					"name": "check_password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a8aa9a7-0a09-4af9-a91b-22c0ce093953",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Password\":\"a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/account/password/check",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"account",
								"password",
								"check"
							]
						},
						"description": "> 接口说明\n\nPOST http://{{host}}/api/v1/account/password/check\n\n检查密码是否正确\n\n> 参数说明\n\n| 参数名     | 类型   | 必需 | 描述              | 示例 |\n| ---------- | ------ | ---- | ----------------- | ---- |\n| `Password` | string | 1    | sha256(原始密码） |      |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"checkpassword\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": \"\",\n    \"Version\": \"1.0.0\"\n}\n```\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 50015 | 钱包密码错误 |"
					},
					"response": []
				},
				{
					"name": "export_walletfile",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/account/export/walletfile",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"account",
								"export",
								"walletfile"
							]
						},
						"description": "> 接口说明\n\nGET http://{{host}}/api/v1/account/export/walletfile\n\n> 详细说明\n\n导出钱包文件\n\n> 返回示例\n\n```json\n    {\n        \"Action\": \"exportwalletfile\",\n        \"Desc\": \"SUCCESS\",\n        \"Error\": 0,\n        \"Result\": {\n            \"Wallet\": \"{\\\"name\\\":\\\"MyWallet\\\",\\\"version\\\":\\\"1.1\\\",\\\"scrypt\\\":{\\\"p\\\":8,\\\"n\\\":16384,\\\"r\\\":8,\\\"dkLen\\\":64},\\\"accounts\\\":[{\\\"address\\\":\\\"AYMnqA65pJFKAbbpD8hi5gdNDBmeFBy5hS\\\",\\\"enc-alg\\\":\\\"aes-256-gcm\\\",\\\"key\\\":\\\"9tRqfmW3H3cTOGQgKjwZWlOz0dKY5xfbiQ2Hw eiNShhCcDqXIk73a8lvh/uNwve\\\",\\\"algorithm\\\":\\\"ECDSA\\\",\\\"salt\\\":\\\"feUbTaXb83Vy7QrGxJRQWw==\\\",\\\"parameters\\\":{\\\"curve\\\":\\\"P-256\\\"},\\\"label\\\":\\\"123\\\",\\\"publicKey\\\":\\\"02ead0eeca8355e2a5c444fa193a390ecdb8c671f26120de6bc329ab72586979c0\\\",\\\"signatureScheme\\\":\\\"SHA256withECDSA\\\",\\\"isDefault\\\":true,\\\"lock\\\":false}]}\"\n        },\n        \"Version\": \"1.0.0\"\n    }\n```\n\n\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 50017 | 导出账号失败 |"
					},
					"response": []
				},
				{
					"name": "balance",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/balance/AYMnqA65pJFKAbbpD8hi5gdNDBmeFBy5hS",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"balance",
								"AYMnqA65pJFKAbbpD8hi5gdNDBmeFBy5hS"
							]
						},
						"description": "> 接口说明\n\nGET http://{{host}}/api/v1/balance/:addr\n\n获取钱包余额\n\n> 参数说明\n\n| 参数名  | 类型   | 必需 | 描述           | 示例 |\n| ------- | ------ | ---- | -------------- | ---- |\n| `addr`    | string | 1    | 钱包地址 |      |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getbalance\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": [\n        {\n            \"Name\": \"Save Power\",\n            \"Symbol\": \"SAVE\",\n            \"Decimals\": 9,\n            \"Balance\": \"999000000\"\n        },\n        {\n            \"Name\": \"NEO\",\n            \"Symbol\": \"NEO\",\n            \"Decimals\": 9,\n            \"Balance\": \"0\"\n        },\n        {\n            \"Name\": \"Ontology\",\n            \"Symbol\": \"ONT\",\n            \"Decimals\": 9,\n            \"Balance\": \"0\"\n        }\n    ],\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名  | 类型   |  描述           |\n| ------- | ------ |  -------------- | \n| `Result.Name`    | string |  资产名称 |\n| `Result.Symbol`    | string |  资产符号 |\n| `Result.Decimals`    | number |  资产精度 |\n| `Result.Balance`    | string |  资产余额 |\n\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40002 | 参数验证失败|\n| 40003 | DSP实例未初始化 |\n| 50000 | 主链未知异常 |"
					},
					"response": []
				},
				{
					"name": "login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"Password\": \"pwd\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/account/login",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"account",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "域名",
			"item": [
				{
					"name": "get_hash_by_url",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/v1/dns/hash/6F6E693A2F2F73686172652F3134633430353462",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"dns",
								"hash",
								"6F6E693A2F2F73686172652F3134633430353462"
							]
						},
						"description": "> 详细说明\n\n获取URL对应的文件Hash\n\nGET http://{{host}}/api/v1/dns/hash/:url\n\n> 请求参数\n\n| 参数名               | 类型   | 必需 | 描述                                                         | 示例 |\n| -------------------- | ------ | ---- | ------------------------------------------------------------ | ---- |\n| `url`           | string | 1    | url的hex编码                                                     |    6F6E693A2F2F73686172652F3134633430353462  |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"getfilehashbyurl\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Hash\": \"QmPqSJqFKnrmuHXS3smMTLcFMF3Tx7kDu5ckLXxWmq18Fy\"\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名                 | 类型   | 描述 |\n| ---------------------- | ------ | ---- |\n| `Action`               | string |      |\n| `Desc`                 | string |      |\n| `Error`                | number |      |\n| `Result`               | array  |      |\n| `Result.Hash`          | string |      |\n| `Version`              | string |      |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40002 | 参数缺失 |\n| 40003 | DSP未实例 |"
					},
					"response": []
				},
				{
					"name": "update_file_url_hash",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"Url\":\"oni://www.explorer.com\",\n\t\"Hash\":\"QmNYriJCNgDTWBGdwfZjxAzJ8QDXAKf7mFPkXssrZa5Tw4\",\n\t\"Password\": \"a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3\",\n\t\"FileName\":\"explorer\",\n\t\"FileSize\": 0\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/dns/url/link",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"dns",
								"url",
								"link"
							]
						},
						"description": "> 详细说明\n\n更新URL对应的文件Hash\n\nPOST http://{{host}}/api/v1/dns/url/link\n\n> 请求参数\n\n| 参数名               | 类型   | 必需 | 描述                                                         | 示例 |\n| -------------------- | ------ | ---- | ------------------------------------------------------------ | ---- |\n| `Url`           | string | 1    | url                                                   |    oni://share/14c4054b  |\n| `Hash`           | string | 1    | 新的文件Hash                                                    |    QmPqSJqFKnrmuHXS3smMTLcFMF3Tx7kDu5ckLXxWmq18Ft  |\n| `Password`           | string | 0    | 钱包密码                                                     |    a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8  |\n| `FileName`           | string | 0    | 文件名称                                                     |    name  |\n| `FileSize`           | number | 0    | 文件大小                                                     |    0  |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"updatefileurllink\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Tx\": \"63ba25b0cfd1cf07d79c81017b0d0cdf344b18785d4a3220bec062998963a5f9\"\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名                 | 类型   | 描述 |\n| ---------------------- | ------ | ---- |\n| `Action`               | string |      |\n| `Desc`                 | string |      |\n| `Error`                | number |      |\n| `Result`               | array  |      |\n| `Result.Tx`          | string |   合约交易Hash   |\n| `Version`              | string |      |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40002 | 参数缺失 |\n| 40003 | DSP未实例 |\n| 40005 | 合约调用失败 |"
					},
					"response": []
				},
				{
					"name": "update_version",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Url\": \"oni://www.client123123.com\",\n    \"Type\": \"1\",\n    \"Version\": \"v1.0.185\",\n    \"FileHash\": \"QmSz6DKqKFVovNcFtWw98zBwf78c1GTNx5rAZAmXFPq9kq\",\n    \"Img\": \"https://i.loli.net/2020/03/09/kB61EqCvKViHj5Y.png\",\n    \"Title\": \"Seek\",\n    \"Platform\": \"1\",\n    \"ChangeLogCN\": \"Seek浏览器\",\n    \"ChangeLogEN\": \"Seek explorer \"\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/dns/plugin/update",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"dns",
								"plugin",
								"update"
							]
						},
						"description": "> 详细说明\n\n更新seeker或插件版本\n\nPOST http://{{host}}/api/v1/dns/update/version\n\n> 请求参数\n\n```json\n{\n\t\"Url\": \"oni://share/browser2\",\n\t\"Version\": \"v0.0.2\",\n\t\"FileHash\": \"QmS3yevaxsCVMEJGrRJQGqRaXW5qT4TjWgQgeraataPZZi\",\n\t\"Img\": \"https://img3.doubanio.com/icon/u39107774-23.jpg\",\n\t\"Title\": \"browser\",\n\t\"Platform\": \"1\",\n\t\"ChangeLogCN\": \"死磕浏览器 02\",\n\t\"ChangeLogEN\": \"seek browser 02\"\n}\n```\n\n| 参数名     | 类型   | 必需 | 描述               | 示例 |\n| ---------- | ------ | ---- | ------------------ | ---- |\n| `Type`\t | string | 1    | url类型，1代表插件 |    \"1\"  |\n| `Url`      | string | 1    | 自定义dns合约url |   插件链接前缀必须以dsp-plugin://开头  |\n| `Version`  | string | 1    | 版本号           |    \"v0.0.1\"  |\n| `FileHash` | string | 1    | 文件hash         |      |\n| `Img`      | string | 1    | 图片         |      |\n| `Title`    | string | 1    | 标题         |      |\n| `Platform` | string | 1    | 平台 0:all 1:win 2:mac 3:linux |      |\n| `ChangeLogCN` | string | 1    | 更新日志中文  |      |\n| `ChangeLogEN` | string | 1    | 更新日志英文  |      |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"updateurlversion\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Tx\": \"a42acfe3f7f9462f87f9672ee1092a0b8d1b6cca9144522cc3358ab8f311df2a\"\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名                  | 类型    | 描述 |\n| ----------------------- | ------- | ---- |\n| `Tx`\t\t\t\t\t  | string  | 交易hash |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 55014 | 更新版本失败 |"
					},
					"response": []
				},
				{
					"name": "query_version",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"Url\": \"oni://www.client.com\",\n\t\"Platform\": \"0\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/dns/plugin/query",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"dns",
								"plugin",
								"query"
							]
						},
						"description": "> 详细说明\n\n查询seeker或插件最新版本\n\nPOST http://{{host}}/api/v1/dns/query/version\n\n> 请求参数\n\n```json\n{\n\t\"Url\": \"oni://share/browser2\",\n\t\"FileHash\": \"Qmek4xsWLf4HBdSwimgGkA3edK2KBvGqLHzTjenzKxyS7h\",\n\t\"Platform\": \"0\"\n}\n```\n\n| 参数名     | 类型   | 必需 | 描述               | 示例 |\n| ---------- | ------ | ---- | ------------------ | ---- |\n| `Url`      | string | 1    | 自定义dns合约url |      |\n| `FileHash` | string | 0    | 指定的文件Hash，可查询指定hash对应的版本号，为空表示查询最新版本号 |      |\n| `Platform` | string | 1    | 平台 0:all 1:win 2:mac 3:linux |      |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"updateurlversion\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": \"ChangeLog\": \"#CL#CN:思科浏览器 03#CL#EN:seeker 03\",\n        \"FileHash\": \"QmPGbCsEwBC9GZ3AnF2gCMiqFnxCWWatUJ91A4yhxrDUPa\",\n        \"Img\": \"https://img3.doubanio.com/icon/u39107774-23.jpg\",\n        \"Platform\": 1,\n        \"Title\": \"browser\",\n        \"Type\": 1,\n        \"Url\": \"oni://browser2\",\n        \"Version\": \"v0.0.5\",\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名                  | 类型    | 描述 |\n| ----------------------- | ------- | ---- |\n| `Url`  | string |  插件绑定的url  |\n| `Type` | number | url类型，1表示插件  |\n| `Version`  | string |  版本号 eg: v0.0.1  |\n| `FileHash` | string | 文件hash         |\n| `ChangeLog` | string | 自定义更新日志  |\n| `Img` | string | 图片         |\n| `Title` | string | 标题  |\n| `Platform` | number |  平台 0:all 1:win 2:mac 3:linux |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 55014 | 查询版本失败 |"
					},
					"response": []
				},
				{
					"name": "get_plugins_list",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://127.0.0.1:10335/api/v1/dns/plugininfos",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "10335",
							"path": [
								"api",
								"v1",
								"dns",
								"plugininfos"
							]
						},
						"description": "> 详细说明\n\n查询插件市场列表\n\nPOST http://{{host}}/api/v1/dns/plugininfos\n\n> 请求参数\n\n无\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"updateurlversion\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": [\n        {\n            \"Type\": 1,\n            \"Url\": \"oni://browser1\",\n            \"Version\": \"v0.0.3\",\n            \"FileHash\": \"QmPGbCsEwBC9GZ3AnF2gCMiqFnxCWWatUJ91A4yhxrDUPa\",\n            \"Img\": \"https://img3.doubanio.com/icon/u39107774-23.jpg\",\n            \"Title\": \"browser\",\n            \"Platform\": 1,\n            \"ChangeLog\": \"#CL#CN:思科浏览器 03#CL#EN:seeker 03\"\n        },\n        {\n            \"Type\": 1,\n            \"Url\": \"oni://browser2\",\n            \"Version\": \"v0.0.5\",\n            \"FileHash\": \"QmPGbCsEwBC9GZ3AnF2gCMiqFnxCWWatUJ91A4yhxrDUPa\",\n            \"Img\": \"https://img3.doubanio.com/icon/u39107774-23.jpg\",\n            \"Title\": \"browser\",\n            \"Platform\": 1,\n            \"ChangeLog\": \"#CL#CN:思科浏览器 03#CL#EN:seeker 03\"\n        }\n    ],\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名                  | 类型    | 描述 |\n| ----------------------- | ------- | ---- |\n| `Url`\t\t| string | 插件链接，以oni://开头 |\n| `Version`  | string |  版本号 eg: v0.0.1  |\n| `Type` | number | url类型，1表示插件  |\n| `FileHash` | string | 文件hash         |\n| `ChangeLog` | string | 自定义更新日志  |\n| `Img` | string | 图片         |\n| `Title` | string | 标题  |\n| `Platform` | number |  平台 0:all 1:win 2:mac 3:linux |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 55014 | 查询版本失败 |"
					},
					"response": []
				},
				{
					"name": "register_url",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Url\": \"oni://www.explorer.com\",\n    \"FileHash\": \"QmNYriJCNgDTWBGdwfZjxAzJ8QDXAKf7mFPkXssrZa5Tw4\",\n    \"FileName\": \"explorer\",\n    \"FileOwner\": \"AZ6xEw9WvyafNPLT9yZdCs8Me8TdokyoGn\"\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:10335/api/v1/dns/register",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "10335",
							"path": [
								"api",
								"v1",
								"dns",
								"register"
							]
						},
						"description": "> 详细说明\n\n注册URL\n\nPOST http://{{host}}/api/v1/dns/register\n\n> 请求参数\n\n| 参数名               | 类型   | 必需 | 描述                                                         | 示例 |\n| -------------------- | ------ | ---- | ------------------------------------------------------------ | ---- |\n| `Url`           | string | 1    | url                                                   |    oni://share/14c4054b  |\n| `Hash`           | string | 1    | 新的文件Hash                                                    |    QmPqSJqFKnrmuHXS3smMTLcFMF3Tx7kDu5ckLXxWmq18Ft  |\n| `Password`           | string | 0    | 钱包密码                                                     |    a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8  |\n| `FileName`           | string | 0    | 文件名称                                                     |    name  |\n| `FileOwner`           | string | 0    | 文件拥有者                                                    |    name  |\n| `BlocksRoot`           | string | 0    | 文件根hash                                                     |    name  |\n| `TotalCount`           | string | 0    | 文件分块数目                                                     |    name  |\n| `FileSize`           | string | 0    | 文件大小                                                     |    0  |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"updatefileurllink\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Tx\": \"63ba25b0cfd1cf07d79c81017b0d0cdf344b18785d4a3220bec062998963a5f9\"\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名                 | 类型   | 描述 |\n| ---------------------- | ------ | ---- |\n| `Action`               | string |      |\n| `Desc`                 | string |      |\n| `Error`                | number |      |\n| `Result`               | array  |      |\n| `Result.Tx`          | string |   合约交易Hash   |\n| `Version`              | string |      |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40002 | 参数缺失 |\n| 40003 | DSP未实例 |\n| 40005 | 合约调用失败 |"
					},
					"response": []
				},
				{
					"name": "query_url",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"Url\": \"oni://share/81397d12\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/dns/query/link",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"dns",
								"query",
								"link"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_url",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"Url\": \"oni://share/07a0cd0c\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/dns/url/delete",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"dns",
								"url",
								"delete"
							]
						},
						"description": "> 详细说明\n\n删除URL\n\nPOST http://{{host}}/api/v1/dns/url/delete\n\n> 请求参数\n\n| 参数名               | 类型   | 必需 | 描述                                                         | 示例 |\n| -------------------- | ------ | ---- | ------------------------------------------------------------ | ---- |\n| `Url`           | string | 1    | url                                                   |    oni://share/14c4054b  |\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"deletefileurl\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Tx\": \"446e74aced653473be40c503bf2b2ef533dd94385de20b84225c2f3fac275778\"\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n| 参数名                 | 类型   | 描述 |\n| ---------------------- | ------ | ---- |\n| `Action`               | string |      |\n| `Desc`                 | string |      |\n| `Error`                | number |      |\n| `Result`               | array  |      |\n| `Result.Tx`          | string |   合约交易Hash   |\n| `Version`              | string |      |\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40002 | 参数缺失 |\n| 40003 | DSP未实例 |\n| 40005 | 合约调用失败 |"
					},
					"response": []
				}
			]
		},
		{
			"name": "水龙头",
			"item": [
				{
					"name": "开发网获取ONI",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://106.75.19.10:10135/api/v1/asset/transfer/direct",
							"protocol": "http",
							"host": [
								"106",
								"75",
								"19",
								"10"
							],
							"port": "10135",
							"path": [
								"api",
								"v1",
								"asset",
								"transfer",
								"direct"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FilmLab",
			"item": [
				{
					"name": "publish_film",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Version\": \"00\",\n    \"Contract\": \"AFmseVrdL9f9oyCzZefL9tG6UbvjackZMj\",\n    \"Method\": \"FilmPublish\",\n    \"Params\": [\n        \"default.png\",\n        \"oni://share/b99cc653\",\n        \"5.mp4\",\n        \"5.mp4\",\n        0,\n        2020,\n        \"EN\",\n        \"USA\",\n       1,\n       true\n    ],\n    \"GasPrice\": 500,\n    \"GasLimit\": 2000000,\n    \"Password\": \"a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/smartcontract/invoke",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"smartcontract",
								"invoke"
							]
						},
						"description": "> 接口说明\n\n发布电影\n\nPOST http://{{host}}/api/v1/smartcontract/invoke\n\n> 请求参数\n\n```json\n{\n    \"Version\": \"00\",\n    \"Contract\": \"AFmseVrdL9f9oyCzZefL9tG6UbvjackZMj\",\n    \"Method\": \"BuyFilm\",\n    \"Params\": [\n        \"default.png\",\n        \"oni://share/b99cc653\",\n        \"5.mp4\",\n        \"5.mp4\",\n        0,\n        2020,\n        \"EN\",\n        \"USA\",\n       1,\n       true\n    ],\n    \"GasPrice\": 500,\n    \"GasLimit\": 2000000,\n    \"Password\": \"a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8\"\n}\n```\n\n| 参数名     | 类型   | 必需 | 描述                  | 示例 |\n| ---------- | ------ | ---- | --------------------- | ---- |\n| `Version`  | number | 1    | 合约版本号的Hex字符串 |      |\n| `Contract` | string | 1    | 合约的Base58地址      |      |\n| `Method`   | string | 1    | 执行的合约的方法      |      |\n| `Params`   | array  | 1    | 参数                  |      |\n| `Params[0]`   | string  | 1    | 电影封面                  |      |\n| `Params[1]`   | string  | 1    | 电影下载链接                  |      |\n| `Params[2]`   | string  | 1    | 电影名称                |      |\n| `Params[3]`   | string  | 1    | 电影描述                |      |\n| `Params[4]`   | number  | 1    | 电影类型                |      |\n| `Params[5]`   | number  | 1    | 电影发布年份                |      |\n| `Params[6]`   | string  | 1    | 电影语言               |      |\n| `Params[7]`   | string  | 1    | 电影所在地区                |      |\n| `Params[8]`   | number  | 1    | 电影价格                |      |\n| `Params[9]`   | boolean  | 1    | 是否可用                |      |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"invokesmartcontract\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Tx\": \"b226e74b0f642c68916db48a577a20797f4db261b32e22850db46f99f0a22c5a\"\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名        | 类型   | 描述 |\n| ------------- | ------ | ---- |\n| `Action`      | string |      |\n| `Desc`        | string |      |\n| `Error`       | number |      |\n| `Result`      | string |      |\n| `Version`     | string |      |\n| `Result.Data` | string | 结果 |\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40002 | 参数验证失败|"
					},
					"response": []
				},
				{
					"name": "update_film",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Version\": \"00\",\n    \"Contract\": \"AFmseVrdL9f9oyCzZefL9tG6UbvjackZMj\",\n    \"Method\": \"FilmUpdate\",\n    \"Params\": [\n        \"default.png\",\n        \"oni://share/ff570db8\",\n        \"2.mp4\",\n        \"2.mp4\",\n        0,\n        2020,\n        \"EN\",\n        \"USA\",\n       \"1\",\n       false\n    ],\n    \"GasPrice\": 500,\n    \"GasLimit\": 2000000,\n    \"Password\": \"a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/smartcontract/invoke",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"smartcontract",
								"invoke"
							]
						},
						"description": "> 接口说明\n\n发布电影\n\nPOST http://{{host}}/api/v1/smartcontract/invoke\n\n> 请求参数\n\n```json\n{\n    \"Version\": \"00\",\n    \"Contract\": \"AFmseVrdL9f9oyCzZefL9tG6UbvjackZMj\",\n    \"Method\": \"BuyFilm\",\n    \"Params\": [\n        \"default.png\",\n        \"oni://share/b99cc653\",\n        \"5.mp4\",\n        \"5.mp4\",\n        0,\n        2020,\n        \"EN\",\n        \"USA\",\n       1\n    ],\n    \"GasPrice\": 500,\n    \"GasLimit\": 2000000,\n    \"Password\": \"a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8\"\n}\n```\n\n| 参数名     | 类型   | 必需 | 描述                  | 示例 |\n| ---------- | ------ | ---- | --------------------- | ---- |\n| `Version`  | number | 1    | 合约版本号的Hex字符串 |      |\n| `Contract` | string | 1    | 合约的Base58地址      |      |\n| `Method`   | string | 1    | 执行的合约的方法      |      |\n| `Params`   | array  | 1    | 参数                  |      |\n| `Params[0]`   | string  | 1    | 电影封面                  |      |\n| `Params[1]`   | string  | 1    | 电影下载链接                  |      |\n| `Params[2]`   | string  | 1    | 电影名称                |      |\n| `Params[3]`   | string  | 1    | 电影描述                |      |\n| `Params[4]`   | number  | 1    | 电影类型                |      |\n| `Params[5]`   | number  | 1    | 电影发布年份                |      |\n| `Params[6]`   | string  | 1    | 电影语言               |      |\n| `Params[7]`   | string  | 1    | 电影所在地区                |      |\n| `Params[8]`   | number  | 1    | 电影价格                |      |\n| `Params[9]`   | boolean  | 1    | 是否可用                |      |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"invokesmartcontract\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Tx\": \"b226e74b0f642c68916db48a577a20797f4db261b32e22850db46f99f0a22c5a\"\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名        | 类型   | 描述 |\n| ------------- | ------ | ---- |\n| `Action`      | string |      |\n| `Desc`        | string |      |\n| `Error`       | number |      |\n| `Result`      | string |      |\n| `Version`     | string |      |\n| `Result.Data` | string | 结果 |\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40002 | 参数验证失败|"
					},
					"response": []
				},
				{
					"name": "buy_film",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Version\": \"00\",\n    \"Contract\": \"AFmseVrdL9f9oyCzZefL9tG6UbvjackZMj\",\n    \"Method\": \"BuyFilm\",\n    \"Params\": [\n        \"QmT31jhoPYjNRZUEvWXWtViBsEqHEG4pqdsZesi7JDuyKk\",\n        \"APDvqeWQsPh4m9gFZ7ipmet42pRphLpgBJ\",\n        \"APDvqeWQsPh4m9gFZ7ipmet42pRphLpgBJ\"\n    ],\n    \"GasPrice\": 500,\n    \"GasLimit\": 2000000,\n    \"Password\": \"a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/smartcontract/invoke",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"smartcontract",
								"invoke"
							]
						},
						"description": "> 接口说明\n\n购买电影\n\nPOST http://{{host}}/api/v1/smartcontract/invoke\n\n> 请求参数\n\n```json\n{\n    \"Version\": \"00\",\n    \"Contract\": \"AFmseVrdL9f9oyCzZefL9tG6UbvjackZMj\",\n    \"Method\": \"BuyFilm\",\n    \"Params\": [\n        \"QmTdGxWQ3FWKTuVpTuFtDLizRjuPWyKMLNaZ7ETHPMYLwL\",\n        \"APDvqeWQsPh4m9gFZ7ipmet42pRphLpgBJ\",\n        \"AHgGsdkCyxFpy3uV5kxQ9ChHZLy41FmSw2\"\n    ],\n    \"GasPrice\": 500,\n    \"GasLimit\": 2000000,\n    \"Password\": \"a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8\"\n}\n```\n\n| 参数名     | 类型   | 必需 | 描述                  | 示例 |\n| ---------- | ------ | ---- | --------------------- | ---- |\n| `Version`  | number | 1    | 合约版本号的Hex字符串 |      |\n| `Contract` | string | 1    | 合约的Base58地址      |      |\n| `Method`   | string | 1    | 执行的合约的方法      |      |\n| `Params`   | array  | 1    | 参数                  |      |\n| `Params[0]`   | string  | 1    | 电影FileHash                  |      |\n| `Params[1]`   | string  | 1    | 电影拥有者                  |      |\n| `Params[2]`   | string  | 1    | 电影购买者(必须是当前使用的钱包)                 |      |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"invokesmartcontract\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Tx\": \"b226e74b0f642c68916db48a577a20797f4db261b32e22850db46f99f0a22c5a\"\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名        | 类型   | 描述 |\n| ------------- | ------ | ---- |\n| `Action`      | string |      |\n| `Desc`        | string |      |\n| `Error`       | number |      |\n| `Result`      | string |      |\n| `Version`     | string |      |\n| `Result.Data` | string | 结果 |\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40002 | 参数验证失败|"
					},
					"response": []
				},
				{
					"name": "get_all_films",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Version\": \"00\",\n    \"Contract\": \"AFmseVrdL9f9oyCzZefL9tG6UbvjackZMj\",\n    \"Method\": \"GetFilmList\",\n    \"Params\": [\n        \"APDvqeWQsPh4m9gFZ7ipmet42pRphLpgBJ\"\n    ],\n    \"GasPrice\": 500,\n    \"GasLimit\": 2000000,\n    \"Password\": \"a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/smartcontract/preexec/json",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"smartcontract",
								"preexec",
								"json"
							]
						},
						"description": "> 接口说明\n\n获取所有电影信息\n\nPOST http://{{host}}/api/v1/smartcontract/preexec/json\n\n> 请求参数\n\n```json\n{\n    \"Version\": \"00\",\n    \"Contract\": \"AFmseVrdL9f9oyCzZefL9tG6UbvjackZMj\",\n    \"Method\": \"BuyFilm\",\n    \"Params\": [\n        \"APDvqeWQsPh4m9gFZ7ipmet42pRphLpgBJ\"\n    ],\n    \"GasPrice\": 500,\n    \"GasLimit\": 2000000,\n    \"Password\": \"a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8\"\n}\n```\n\n| 参数名     | 类型   | 必需 | 描述                  | 示例 |\n| ---------- | ------ | ---- | --------------------- | ---- |\n| `Version`  | number | 1    | 合约版本号的Hex字符串 |      |\n| `Contract` | string | 1    | 合约的Base58地址      |      |\n| `Method`   | string | 1    | 执行的合约的方法      |      |\n| `Params`   | array  | 1    | 参数                  |      |\n| `Params[0]`   | string  | 1    | 当前用户钱包地址                  |      |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"preexecsmartcontracttojson\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": [{\n        \"Available\": true,\n        \"Cover\": \"ZGVmYXVsdC5wbmc=\",\n        \"CreatedAt\": 0,\n        \"Desc\": \"MS5tcDQ=\",\n        \"FileSize\": 2304,\n        \"Hash\": \"UW1UZEd4V1EzRldLVHVWcFR1RnRETGl6Ump1UFd5S01MTmFaN0VUSFBNWUx3TA==\",\n        \"Id\": \"UW1UZEd4V1EzRldLVHVWcFR1RnRETGl6Ump1UFd5S01MTmFaN0VUSFBNWUx3TOOwxEKY/BwUmvv0yJlvuSQnrkHkZJuTTKSVmRt4UrhV\",\n        \"Language\": \"RU4=\",\n        \"Name\": \"MS5tcDQ=\",\n        \"Owner\": [\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0\n        ],\n        \"PaidCount\": 0,\n        \"Price\": 0,\n        \"RealFileSize\": 2040,\n        \"Region\": \"VVNB\",\n        \"ReleaseYear\": 2020,\n        \"TotalProfit\": 0,\n        \"Type\": 0,\n        \"Url\": \"b25pOi8vc2hhcmUvZjJkYmZmZWI=\"\n    }],\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名        | 类型   | 描述 |\n| ------------- | ------ | ---- |\n| `Action`      | string |      |\n| `Desc`        | string |      |\n| `Error`       | number |      |\n| `Result`      | string |      |\n| `Version`     | string |      |\n| `Result.Data` | string | 结果 |\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40002 | 参数验证失败|"
					},
					"response": []
				},
				{
					"name": "get_film_info",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Version\": \"00\",\n    \"Contract\": \"AFmseVrdL9f9oyCzZefL9tG6UbvjackZMj\",\n    \"Method\": \"FilmGetInfo\",\n    \"Params\": [\n    \t\"QmfGieWEhuzqsJBBeSHW2TMDE4Zp7NDXHrk9cMrEbgqbpf\",\n        \"APDvqeWQsPh4m9gFZ7ipmet42pRphLpgBJ\"\n    ],\n    \"GasPrice\": 500,\n    \"GasLimit\": 2000000,\n    \"Password\": \"a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/smartcontract/preexec/json",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"smartcontract",
								"preexec",
								"json"
							]
						},
						"description": "> 接口说明\n\n获取电影信息电影\n\nPOST http://{{host}}/api/v1/smartcontract/preexec/json\n\n> 请求参数\n\n```json\n{\n    \"Version\": \"00\",\n    \"Contract\": \"AFmseVrdL9f9oyCzZefL9tG6UbvjackZMj\",\n    \"Method\": \"BuyFilm\",\n    \"Params\": [\n        \"QmTdGxWQ3FWKTuVpTuFtDLizRjuPWyKMLNaZ7ETHPMYLwL\",\n        \"APDvqeWQsPh4m9gFZ7ipmet42pRphLpgBJ\"\n    ],\n    \"GasPrice\": 500,\n    \"GasLimit\": 2000000,\n    \"Password\": \"a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8\"\n}\n```\n\n| 参数名     | 类型   | 必需 | 描述                  | 示例 |\n| ---------- | ------ | ---- | --------------------- | ---- |\n| `Version`  | number | 1    | 合约版本号的Hex字符串 |      |\n| `Contract` | string | 1    | 合约的Base58地址      |      |\n| `Method`   | string | 1    | 执行的合约的方法      |      |\n| `Params`   | array  | 1    | 参数                  |      |\n| `Params[0]`   | string  | 1    | 电影FileHash                  |      |\n| `Params[1]`   | string  | 1    | 电影拥有者                  |      |\n\n\n> 返回示例\n\n```json\n{\n    \"Action\": \"preexecsmartcontracttojson\",\n    \"Desc\": \"SUCCESS\",\n    \"Error\": 0,\n    \"Result\": {\n        \"Available\": true,\n        \"Cover\": \"ZGVmYXVsdC5wbmc=\",\n        \"CreatedAt\": 0,\n        \"Desc\": \"MS5tcDQ=\",\n        \"FileSize\": 2304,\n        \"Hash\": \"UW1UZEd4V1EzRldLVHVWcFR1RnRETGl6Ump1UFd5S01MTmFaN0VUSFBNWUx3TA==\",\n        \"Id\": \"UW1UZEd4V1EzRldLVHVWcFR1RnRETGl6Ump1UFd5S01MTmFaN0VUSFBNWUx3TOOwxEKY/BwUmvv0yJlvuSQnrkHkZJuTTKSVmRt4UrhV\",\n        \"Language\": \"RU4=\",\n        \"Name\": \"MS5tcDQ=\",\n        \"Owner\": [\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0\n        ],\n        \"PaidCount\": 0,\n        \"Price\": 0,\n        \"RealFileSize\": 2040,\n        \"Region\": \"VVNB\",\n        \"ReleaseYear\": 2020,\n        \"TotalProfit\": 0,\n        \"Type\": 0,\n        \"Url\": \"b25pOi8vc2hhcmUvZjJkYmZmZWI=\"\n    },\n    \"Version\": \"1.0.0\"\n}\n```\n\n> 返回参数\n\n| 参数名        | 类型   | 描述 |\n| ------------- | ------ | ---- |\n| `Action`      | string |      |\n| `Desc`        | string |      |\n| `Error`       | number |      |\n| `Result`      | string |      |\n| `Version`     | string |      |\n| `Result.Data` | string | 结果 |\n\n\n> 错误码\n\n| 错误码| 原因 |\n| ------| -----|\n| 40002 | 参数验证失败|"
					},
					"response": []
				},
				{
					"name": "get_user_films",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Version\": \"00\",\n    \"Contract\": \"AFmseVrdL9f9oyCzZefL9tG6UbvjackZMj\",\n    \"Method\": \"GetUserFilmList\",\n    \"Params\": [\n        \"AHgGsdkCyxFpy3uV5kxQ9ChHZLy41FmSw2\"\n    ],\n    \"GasPrice\": 500,\n    \"GasLimit\": 2000000,\n    \"Password\": \"a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/smartcontract/preexec/json",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"smartcontract",
								"preexec",
								"json"
							]
						},
						"description": "> 返回结果\n\n```json\n\n[\n    {\n        \"Id\": \"UW1UZEd4V1EzRldLVHVWcFR1RnRETGl6Ump1UFd5S01MTmFaN0VUSFBNWUx3TOOwxEKY/BwUmvv0yJlvuSQnrkHkZJuTTKSVmRt4UrhV\", \n        \"Hash\": \"UW1UZEd4V1EzRldLVHVWcFR1RnRETGl6Ump1UFd5S01MTmFaN0VUSFBNWUx3TA==\", \n        \"Cover\": \"ZGVmYXVsdC5wbmc=\", \n        \"Url\": \"b25pOi8vc2hhcmUvZjJkYmZmZWI=\", \n        \"Name\": \"MS5tcDQ=\", \n        \"Desc\": \"MS5tcDQ=\", \n        \"Available\": true, \n        \"Type\": 0, \n        \"ReleaseYear\": 2020, \n        \"Language\": \"RU4=\", \n        \"Region\": \"VVNB\", \n        \"Price\": 0, \n        \"CreatedAt\": 0, \n        \"PaidCount\": 0, \n        \"TotalProfit\": 0, \n        \"FileSize\": 2304, \n        \"RealFileSize\": 2040, \n        \"Owner\": [\n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0\n        ]\n    }\n]\n\n\n```"
					},
					"response": []
				},
				{
					"name": "get_user_buy_records",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Version\": \"00\",\n    \"Contract\": \"AFmseVrdL9f9oyCzZefL9tG6UbvjackZMj\",\n    \"Method\": \"GetUserBuyRecordList\",\n    \"Params\": [\n        \"APDvqeWQsPh4m9gFZ7ipmet42pRphLpgBJ\"\n    ],\n    \"GasPrice\": 500,\n    \"GasLimit\": 2000000,\n    \"Password\": \"a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/smartcontract/preexec/json",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"smartcontract",
								"preexec",
								"json"
							]
						},
						"description": "> 返回结果\n\n```json\n\n[\n    {\n        \"Id\": \"UW1UZEd4V1EzRldLVHVWcFR1RnRETGl6Ump1UFd5S01MTmFaN0VUSFBNWUx3TOOwxEKY/BwUmvv0yJlvuSQnrkHkZJuTTKSVmRt4UrhV\", \n        \"Hash\": \"UW1UZEd4V1EzRldLVHVWcFR1RnRETGl6Ump1UFd5S01MTmFaN0VUSFBNWUx3TA==\", \n        \"Cover\": \"ZGVmYXVsdC5wbmc=\", \n        \"Url\": \"b25pOi8vc2hhcmUvZjJkYmZmZWI=\", \n        \"Name\": \"MS5tcDQ=\", \n        \"Desc\": \"MS5tcDQ=\", \n        \"Available\": true, \n        \"Type\": 0, \n        \"ReleaseYear\": 2020, \n        \"Language\": \"RU4=\", \n        \"Region\": \"VVNB\", \n        \"Price\": 0, \n        \"CreatedAt\": 0, \n        \"PaidCount\": 0, \n        \"TotalProfit\": 0, \n        \"FileSize\": 2304, \n        \"RealFileSize\": 2040, \n        \"Owner\": [\n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0\n        ]\n    }\n]\n\n\n```"
					},
					"response": []
				},
				{
					"name": "get_user_profit_records",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Version\": \"00\",\n    \"Contract\": \"AFmseVrdL9f9oyCzZefL9tG6UbvjackZMj\",\n    \"Method\": \"GetUserProfitRecordList\",\n    \"Params\": [\n        \"APDvqeWQsPh4m9gFZ7ipmet42pRphLpgBJ\"\n    ],\n    \"GasPrice\": 500,\n    \"GasLimit\": 2000000,\n    \"Password\": \"a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/v1/smartcontract/preexec/json",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"smartcontract",
								"preexec",
								"json"
							]
						},
						"description": "> 返回结果\n\n```json\n\n[\n    {\n        \"Id\": \"UW1UZEd4V1EzRldLVHVWcFR1RnRETGl6Ump1UFd5S01MTmFaN0VUSFBNWUx3TOOwxEKY/BwUmvv0yJlvuSQnrkHkZJuTTKSVmRt4UrhV\", \n        \"Hash\": \"UW1UZEd4V1EzRldLVHVWcFR1RnRETGl6Ump1UFd5S01MTmFaN0VUSFBNWUx3TA==\", \n        \"Cover\": \"ZGVmYXVsdC5wbmc=\", \n        \"Url\": \"b25pOi8vc2hhcmUvZjJkYmZmZWI=\", \n        \"Name\": \"MS5tcDQ=\", \n        \"Desc\": \"MS5tcDQ=\", \n        \"Available\": true, \n        \"Type\": 0, \n        \"ReleaseYear\": 2020, \n        \"Language\": \"RU4=\", \n        \"Region\": \"VVNB\", \n        \"Price\": 0, \n        \"CreatedAt\": 0, \n        \"PaidCount\": 0, \n        \"TotalProfit\": 0, \n        \"FileSize\": 2304, \n        \"RealFileSize\": 2040, \n        \"Owner\": [\n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0, \n            0\n        ]\n    }\n]\n\n\n```"
					},
					"response": []
				}
			]
		},
		{
			"name": "test",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": ""
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "1d59b6fb-ac7f-4c03-a572-340523d8fc38",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "87491e90-c56a-48e8-8c6e-b06ae124edc1",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}